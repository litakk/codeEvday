// Структуры данных:

// Стек — «последний зашёл, первый вышел» (LIFO).
// Очередь — «первый зашёл, первый вышел» (FIFO).
// Deque — двухсторонняя очередь, можно добавлять/убирать с обоих концов.

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// Стек (Stack)
// Принцип: LIFO (Last In, First Out — последний зашёл, первый вышел).
// Пример из жизни: стопка тарелок. Берём сверху, кладём сверху.

// создаём стек
let stack = []

// добавить элемент (push)
stack.push(10)   // [10]
stack.push(20)   // [10, 20]

// убрать элемент (pop)
stack.pop()      // [10] → вернёт 20

// посмотреть верхний элемент
console.log(stack[stack.length - 1]) // 10

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// Очередь (Queue)
// Принцип: FIFO (First In, First Out — первый зашёл, первый вышел).
// Пример из жизни: очередь в магазине.

let queue = []

// добавить в конец (enqueue)
queue.push(1)   // [1]
queue.push(2)   // [1, 2]

// убрать из начала (dequeue)
queue.shift()   // [2] → вернёт 1
console.log(queue);

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// Deque (двухсторонняя очередь)
// Можно добавлять и убирать с обоих концов.

let deque = []

// добавить в начало
deque.unshift(10)  // [10]

// добавить в конец
deque.push(20)     // [10, 20]

// убрать с начала
deque.shift()      // [20]

// убрать с конца
deque.pop()        // []

console.log(deque);

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

