// === –ò–∑—É—á–µ–Ω–∏–µ JavaScript ===

// === –°—Å—ã–ª–æ—á–Ω—ã–π —Ç–∏–ø - object: [] , {} ===

// –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç objectA
const objectA = {
  propertyA: 10,
  propertyB: true,
};

// –ö–æ–ø–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ objectA –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é copyOfA
const copyOfA = objectA;

// –ò–∑–º–µ–Ω—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ —Å—Å—ã–ª–∫—É
copyOfA.propertyA = 20;
copyOfA.propertyC = "abc";

// –ü–æ—Å–∫–æ–ª—å–∫—É –æ–±—ä–µ–∫—Ç—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø–æ —Å—Å—ã–ª–∫–µ, –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç—Ä–∞–∑—è—Ç—Å—è –Ω–∞ objectA
console.log(objectA); // { propertyA: 20, propertyB: true, propertyC: 'abc' }

// --- --- --- --- --- --- --- --- --- --- --- ---

// === –ë–∞–∑–æ–≤—ã–π –æ–±—ä–µ–∫—Ç ===
const cityInfo = {
  city: "New York",
};

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
cityInfo.popular = true;

console.log(cityInfo); // { city: 'New York', popular: true }

// --- --- --- --- --- --- --- --- --- --- --- ---

// === –ú–ï–¢–û–î–´ –û–ë–™–ï–ö–¢–û–í ===

// –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç hero —Å –º–µ—Ç–æ–¥–∞–º–∏
const hero = {
  name: "–°—É–ø–µ—Ä–º–µ–Ω",

  // –ú–µ—Ç–æ–¥: –≥–µ—Ä–æ–π –±–µ–∂–∏—Ç
  run() {
    console.log(`${this.name} –±–µ–∂–∏—Ç!`);
  },

  // –ú–µ—Ç–æ–¥: –≥–µ—Ä–æ–π –ø—Ä—ã–≥–∞–µ—Ç
  jump() {
    console.log(`${this.name} –ø—Ä—ã–≥–∞–µ—Ç!`);
  },

  // –ú–µ—Ç–æ–¥: –≥–µ—Ä–æ–π –∞—Ç–∞–∫—É–µ—Ç
  attack() {
    console.log(`${this.name} –∞—Ç–∞–∫—É–µ—Ç –≤—Ä–∞–≥–∞!`);
  },
};

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥—ã –æ–±—ä–µ–∫—Ç–∞ hero
hero.run(); // "–°—É–ø–µ—Ä–º–µ–Ω –±–µ–∂–∏—Ç!"
hero.jump(); // "–°—É–ø–µ—Ä–º–µ–Ω –ø—Ä—ã–≥–∞–µ—Ç!"
hero.attack(); // "–°—É–ø–µ—Ä–º–µ–Ω –∞—Ç–∞–∫—É–µ—Ç –≤—Ä–∞–≥–∞!"

// --- --- --- --- --- --- --- --- --- --- --- ---

// –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç user —Å –º–µ—Ç–æ–¥–∞–º–∏
const user = {
  name: "Azamat",

  // –ú–µ—Ç–æ–¥: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç
  say() {
    console.log(`${this.name} –≥–æ–≤–æ—Ä–∏—Ç!`);
  },

  // –ú–µ—Ç–æ–¥: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ
  do() {
    console.log(`${this.name} –¥–µ–ª–∞–µ—Ç —á—Ç–æ-—Ç–æ`);
  },
};

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥—ã –æ–±—ä–µ–∫—Ç–∞ user
user.say(); // "Azamat –≥–æ–≤–æ—Ä–∏—Ç!"
user.do(); // "Azamat –¥–µ–ª–∞–µ—Ç —á—Ç–æ-—Ç–æ"

// --- --- --- --- --- --- --- --- --- --- --- ---

const stringifiedUser = JSON.stringify(user); // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ–±—ä–µ–∫—Ç user –≤ —Å—Ç—Ä–æ–∫—É —Ñ–æ—Ä–º–∞—Ç–∞ JSON
console.log(JSON.parse(stringifiedUser));

// 1. –ß—Ç–æ —Ç–∞–∫–æ–µ JSON.stringify()?
// –ú–µ—Ç–æ–¥ JSON.stringify()
// –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞, –º–∞—Å—Å–∏–≤–∞ –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏–º–∏—Ç–∏–≤–Ω–æ–≥–æ —Ç–∏–ø–∞
// (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–∏—Å–ª–∞, —Å—Ç—Ä–æ–∫–∏, –±—É–ª–µ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è) –≤ —Å—Ç—Ä–æ–∫—É —Ñ–æ—Ä–º–∞—Ç–∞ JSON. –≠—Ç–æ —É–¥–æ–±–Ω–æ
// –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ —Å–µ—Ç—å –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö –≤ —Ñ–∞–π–ª–µ.

// 2. –ú–µ—Ç–æ–¥ JSON.parse() –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ–±—Ä–∞—Ç–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å JSON.stringify():
// –æ–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ—ë –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ–±—ä–µ–∫—Ç, –º–∞—Å—Å–∏–≤ –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏–º–∏—Ç–∏–≤–Ω–æ–≥–æ —Ç–∏–ø–∞.

// –ò–¢–û–ì:
// JSON.stringify() –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç, –ø—Ä–µ–æ–±—Ä–∞–∑—É—è –µ–≥–æ –≤ —Å—Ç—Ä–æ–∫—É —Ñ–æ—Ä–º–∞—Ç–∞ JSON.
// JSON.parse() –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ—ë –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ–±—ä–µ–∫—Ç.

// --- --- --- --- --- --- --- --- --- --- --- ---

let number = 10;

if (number <= 10) {
  console.log("–í–∞–º –º–µ–Ω—å—à–µ 10 –ª–µ—Ç");
} else {
  console.log("–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω");
}

// --- --- --- --- --- --- --- --- --- --- --- ---

let temperature = 10;

if (temperature > 30) {
  console.log("–ñ–∞—Ä–∫–æ");
} else if (temperature > 15) {
  console.log("–¢–µ–ø–ª–æ");
} else if (temperature > 0) {
  console.log("–ü—Ä–æ—Ö–ª–∞–¥–Ω–æ");
} else {
  console.log("–•–æ–ª–æ–¥–Ω–æ");
}

// --- --- --- --- --- --- --- --- --- --- --- ---

let stringExample = "azamat"; // —Å—Ç—Ä–æ–∫–∞ —Å –¥–ª–∏–Ω–æ–π 6 —Å–∏–º–≤–æ–ª–æ–≤

if (stringExample.length > 7) {
  // –ø—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –±–æ–ª—å—à–µ 7
  console.log("–Ω–µ –±–æ–ª—å—à–µ 7");
} else if (stringExample.length > 5) {
  // –ø—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –±–æ–ª—å—à–µ 5
  console.log("6 –±–æ–ª—å—à–µ —á–µ–º 5"); // —ç—Ç–æ —É—Å–ª–æ–≤–∏–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ 6
} else {
  // –µ—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —É—Å–ª–æ–≤–∏–π –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è
  console.log("–í –∏—Ç–æ–≥–µ –Ω–µ –Ω–∞—à–µ–ª –ø–æ–¥—Ö–æ–¥—è—â–∏–π");
}

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ü—Ä–∏–º–∏—Ç–∏–≤–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö:

// Number ‚Äî —á–∏—Å–ª–∞(—Ü–µ–ª—ã–µ –∏ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π): 5, 10.3, -7.
// String ‚Äî —Å—Ç—Ä–æ–∫–∏(—Ç–µ–∫—Å—Ç—ã): "Hello", 'World'.
// Boolean ‚Äî –±—É–ª–µ–≤—ã –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ª–∏–±–æ true(–∏—Å—Ç–∏–Ω–∞), –ª–∏–±–æ false(–ª–æ–∂—å).
// Null ‚Äî —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è.
// Undefined ‚Äî –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –µ–π –Ω–µ –ø—Ä–∏—Å–≤–æ–µ–Ω–æ –¥—Ä—É–≥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
// Symbol ‚Äî —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–ª—é—á–µ–π –≤ –æ–±—ä–µ–∫—Ç–∞—Ö.
// BigInt ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –æ—á–µ–Ω—å –±–æ–ª—å—à–∏–º–∏ —á–∏—Å–ª–∞–º–∏, –ø—Ä–µ–≤—ã—à–∞—é—â–∏–º–∏ –¥–∏–∞–ø–∞–∑–æ–Ω —Ç–∏–ø–æ–≤ Number.
// –û–±—ä–µ–∫—Ç—ã ‚Äî —ç—Ç–æ —Å–ª–æ–∂–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤–∫–ª—é—á–∞—è —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –¥—Ä—É–≥–∏–µ –æ–±—ä–µ–∫—Ç—ã.–ù–∞–ø—Ä–∏–º–µ—Ä, –º–∞—Å—Å–∏–≤—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞–∫–∂–µ —è–≤–ª—è—é—Ç—Å—è –æ–±—ä–µ–∫—Ç–∞–º–∏.

// --- --- --- --- --- --- --- --- --- --- --- ---

let name = String;
let age = Number;
let isBoolean = Boolean;

//  –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç —á–µ—Ä–µ–∑ 5 –ª–µ—Ç.

let currentAge = 18;
let futureAge = currentAge + 5;
console.log(futureAge);

// --- --- --- --- --- --- --- --- --- --- --- ---

// –°—Ä–∞–≤–Ω–∏—Ç–µ —Å–≤–æ–π —Ç–µ–∫—É—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç —Å 18 —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
let myAge = 18;
let isEqualTo18 = myAge === 18;
console.log(isEqualTo18);

// --- --- --- --- --- --- --- --- --- --- --- ---

// –°–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç person —Å —Ç—Ä–µ–º—è —Å–≤–æ–π—Å—Ç–≤–∞–º–∏:
let person = {
  name: "Azamat",
  age: 18,
};

let isAdult = person.age === 18;
console.log(isAdult);

// --- --- --- --- --- --- --- --- --- --- --- ---

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ (–ø–æ –∂–µ–ª–∞–Ω–∏—é):

let remainder = 18 % 2;
console.log(remainder);

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º

let word = "MADAM";

let lowerCaseWord = word.toLowerCase();
let reversedWord = lowerCaseWord.split("").reverse().join("");
if (lowerCaseWord === reversedWord) {
  console.log("–ü–∞–ª–∏–Ω–¥—Ä–æ–º");
} else {
  console.log("–ù–µ –ø–∞–ª–∏–Ω–¥—Ä–æ–º");
}

// –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–∞–ª–∏–Ω–¥—Ä–æ–º–∞ –≤ —Ñ—É–Ω–∫—Ü–∏—é

function checkPalindrome(word) {
  let lowerCaseWord = word.toLowerCase();
  let reversedWord = lowerCaseWord.split("").reverse().join("");

  if (lowerCaseWord === reversedWord) {
    console.log("–≠—Ç–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º");
  } else {
    console.log("–ù–µ –ø–∞–ª–∏–Ω–¥—Ä–æ–º");
  }
}

// --- --- --- --- --- --- --- --- --- --- --- ---

// Math.floor() - –æ–∫—Ä—É–≥–ª—è–µ—Ç —á–∏—Å–ª–æ –≤ –º–µ–Ω—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É
// Math.round() - –æ–∫—Ä—É–≥–ª—è–µ—Ç —á–∏—Å–ª–æ –≤ –±–æ–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É
// Math.random() - –±–µ—Ä–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞

let numberExample = 1.5;
let randomValue = Math.random(); // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞ –æ—Ç 0 –¥–æ 1
console.log(randomValue);

// --- --- --- --- --- --- --- --- --- --- --- ---

let textExample = "Robin Singh from USA.";
let transformedText = textExample.replace(/ /g, "-").toLowerCase();
console.log(transformedText);

// –ß—Ç–æ –¥–µ–ª–∞–µ—Ç return –≤ —Ñ—É–Ω–∫—Ü–∏–∏?
// üîπ return –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏. –ë–µ–∑ –Ω–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç undefined).

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ß–µ–º –æ—Ç–ª–∏—á–∞—é—Ç—Å—è let, const –∏ var?
// üîπ –í JavaScript –µ—Å—Ç—å —Ç—Ä–∏ —Å–ø–æ—Å–æ–±–∞ –æ–±—ä—è–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:

// var (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–¥–∫–æ).
// let (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –¥–ª—è –∏–∑–º–µ–Ω—è–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π).
// const (–¥–ª—è –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π).

// --- --- --- --- --- --- --- --- --- --- --- ---

// EXAMPLE CALLBACK FUNCTION ->

// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç callback
function greet(name, callback) {
  console.log("–ü—Ä–∏–≤–µ—Ç, " + name);
  callback(); // –í—ã–∑–æ–≤ callback –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
}

// Callback —Ñ—É–Ω–∫—Ü–∏—è
function sayGoodbye() {
  console.log("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!");
}

// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å callback
greet("–ò–≤–∞–Ω", sayGoodbye);

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ë–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π –ø—Ä–∏–º–µ—Ä callback

function printMyName() {
  console.log("Bogdan");
}

console.log("Start");

setTimeout(printMyName, 3000); // –ó–∞–¥–µ—Ä–∂–∫–∞ 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º —Ñ—É–Ω–∫—Ü–∏–∏ printMyName

// --- --- --- --- --- --- --- --- --- --- --- ---

// –†–∞–±–æ—Ç–∞—è —Å –æ–±—ä–µ–∫—Ç–∞–º–∏, –Ω–µ —Å—Ç–æ–∏—Ç –∏–∑–º–µ–Ω—è—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –Ω–∞–ø—Ä—è–º—É—é,
// –ª—É—á—à–µ —Å–æ–∑–¥–∞—Ç—å –∫–æ–ø–∏—é –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–µ–π

const originalObject = { name: "Alice" };
const copiedObject = { ...originalObject }; // —Å–æ–∑–¥–∞–µ–º –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—É—é –∫–æ–ø–∏—é
copiedObject.name = "Bob";
console.log(originalObject.name); // –≤—ã–≤–µ–¥–µ—Ç "Alice" ‚Äî originalObject –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è

// --- --- --- --- --- --- --- --- --- --- --- ---

// –û–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏

// 1. –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤–∏–¥–∏–º–æ—Å—Ç–∏
// 2. –õ–æ–∫–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤–∏–¥–∏–º–æ—Å—Ç–∏

const globalVariable = 5;

function outerFunction() {
  function innerFunction() {
    console.log(globalVariable); // 5
  }
  innerFunction();
}

outerFunction();

// --- --- --- --- --- --- --- --- --- --- --- ---

// –û–ø–µ—Ä–∞—Ç–æ—Ä—ã && –∏ ||
// –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –æ—á–µ–Ω—å —á–∞—Å—Ç–æ, –∏ —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–æ—Ä–∏—è !

// –ü—Ä–∏–º–µ—Ä—ã:

// const userName = userInput || "–ì–æ—Å—Ç—å";
// console.log(userName); // –µ—Å–ª–∏ userInput –ø—É—Å—Ç–æ–π, –±—É–¥–µ—Ç "–ì–æ—Å—Ç—å"

// –°–ª–µ–¥—É—é—â–∏–π –ø—Ä–∏–º–µ—Ä:

const result = null || 0 || false || "–î–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã";
console.log(result); // "–î–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã"

// --- --- --- --- --- --- --- --- --- --- --- ---

// –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Äî —ç—Ç–æ –∫–æ—Ä–æ—Ç–∫–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π, –≤–≤–µ–¥–µ–Ω–Ω—ã–π –≤ ES6.
// –û–Ω–∞ –ø–∏—à–µ—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–∏–º–≤–æ–ª–∞ =>, –∏–∑-–∑–∞ —á–µ–≥–æ –∏ –ø–æ–ª—É—á–∏–ª–∞ —Å–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.

// –ö–æ—Ä–æ—Ç–∫–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å:
// –£ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –∑–∞–ø–∏—Å—å, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –∫–æ–¥ –ø—Ä–æ—Å—Ç–æ–π

// –ù–µ –∏–º–µ–µ—Ç –∏–º–µ–Ω–∏
// –ù–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞–º–∏
// –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ arguments

// –î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –∫–æ–¥–∞:
// –û—Å–æ–±–µ–Ω–Ω–æ —É–¥–æ–±–Ω–æ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é:

// –ö–æ–≥–¥–∞ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç?
// –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç arguments.
// –ö–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ new).
// –ï—Å–ª–∏ –≤–∞–∂–µ–Ω —è–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç this (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –º–µ—Ç–æ–¥–∞—Ö –æ–±—ä–µ–∫—Ç–æ–≤).

const sum = (a, b) => {
  let c;
  a = a + 1;
  c = a + b;
  return c;
};

function exampleFunction() {
  const sum = (a, b) => a + b;
  console.log(sum(2, 3)); // 5
}

// --- --- --- --- --- --- --- --- --- --- --- ---

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:

// –ú–æ–∂–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É –≤—Ä—É—á–Ω—É—é:
// throw new Error('Some error')

// –ß—Ç–æ –±—ã –ø–æ–π–º–∞—Ç—å –≤–µ—Ä–æ—è—Ç–Ω—É—é –æ—à–∏–±–∫—É –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å try {}, –µ—Å–ª–∏ –≤ –∏—Ç–æ–≥–µ –æ—à–∏–±–∫–∞ –≤—Å—ë —Ç–∞–∫–∏ –≤—ã–π–¥–µ—Ç –æ–Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ catch() {}

// try {
// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±–ª–æ–∫–∞ –∫–æ–¥–∞
// } catch (error) {
//     console.log(error)
//     console.log(error.message)
// }

// console.log("Continue...")

// –†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä

const fnWithError = () => {
  throw new Error("Some error");
};

try {
  fnWithError();
} catch (error) {
  console.log(error);
}

console.log("Continue...");

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ú–ê–°–°–ò–í:

// –ú–ê–°–°–ò–í - —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ —Å–≤–æ–π—Å—Ç–≤
// —Å–≤–æ–π—Å—Ç–≤–æ —É –º–∞—Å—Å–∏–≤–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è - 0, 1, 2, 3 etc..

// –ú–∞—Å—Å–∏–≤ —ç—Ç–æ –æ—á–µ–Ω—å –ø–æ–ø—É–ª—è—Ä–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤ JS
// –∏ –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–∞–∫–æ–π –∂–µ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å—é –∫–∞–∫ –∏ –û–±—ä–µ–∫—Ç

// –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç —Å–≤–æ–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä - index, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0

// –§–æ—Ä–º–∞—Ç –∑–∞–ø–∏—Å–∏ –º–∞—Å—Å–∏–≤–∞:

const myArray = [1, 2, 3];
console.log(myArray);
// [1, 2, 3]

const myArray2 = new Array(1, 2, 3);
// –ø—Ä–∏–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é Array –∏ –ø–µ—Ä–µ–¥–∞—ë–º –≤ –Ω–µ—ë –∞—Ä–≥—É–º–µ–Ω—Ç—ã
console.log(myArray2);
// [1, 2, 3]

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–∞—Å—Å–∏–≤–æ–≤

// [1, 2, 3]
// 0: 1
// 1: 2
// 2: 3
// length: 3

// –ß—Ç–æ-–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç —Å –º–∞—Å—Å–∏–≤–∞ –Ω—É–∂–Ω–æ:

console.log(myArray[0]);

// –ß—Ç–æ-–±—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ –Ω—É–∂–Ω–æ:

myArray.unshift(0); // –¥–æ–±–∞–≤–ª—è–µ–º 0 –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞
myArray.shift(); // —É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç (1)

myArray.push(4); // –¥–æ–±–∞–≤–ª—è–µ–º 4 –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞
myArray.pop(); // —É–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç (3)

myArray.splice(1, 0, 1.5); // –¥–æ–±–∞–≤–ª—è–µ–º 1.5 –Ω–∞ –∏–Ω–¥–µ–∫—Å 1 (–≤—Å—Ç–∞–≤–∫–∞ –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤)

// arr.splice(startIndex, deleteCount, item1, item2, ...)

// startIndex ‚Äî –∏–Ω–¥–µ–∫—Å, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã).
// deleteCount ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å (–º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å 0, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã).
// item1, item2, ... ‚Äî —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –º–∞—Å—Å–∏–≤, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ–∑–∏—Ü–∏–∏ startIndex

let ar = [1, 2, 3, 4, 5];
ar.splice(2, 1);
// —É–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å–æ–º —Ç–æ–ª—å–∫–æ 1 –∑–Ω–∞—á–µ–Ω–∏–µ
console.log(ar);

let newArr = [...myArray, 4]; // —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º 4
// console.log(newArr[0])
// console.log(newArr[0,1])
console.log(newArr);

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ó–ê–î–ê–ß–ê: —Ü–∏–∫–ª –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç–∞–µ—Ç –¥–æ 50 –∏ –≤—ã–≤–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞

for (let i = 0; i < 51; i++) {
  if (i % 2 === 0) {
    console.log(`—á—ë—Ç–Ω–æ–µ —á–∏—Å–ª–æ ${i}`);
  } else {
    console.log(`–Ω–µ —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞ ${i}`);
  }
}

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ó–ê–î–ê–ß–ê: —Å–∏—Å—Ç–µ–º–∞ —Å–∫–∏–¥–æ–∫ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –æ–¥–µ–∂–¥—ã

function CalculateDiscountedPrice(price, discount) {
  let a = price - (price * discount) / 100;
  return a;
}
console.log(CalculateDiscountedPrice(1000, 10));

// –ó–ê–î–ê–ß–ê:
// –£ —Ç–µ–±—è –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, —Å –∏—Ö –∏–º–µ–Ω–∞–º–∏, –≤–æ–∑—Ä–∞—Å—Ç–æ–º –∏ –æ—Ü–µ–Ω–∫–∞–º–∏.–ù–∞–ø–∏—à–∏ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π:

// –í—ã–±–µ—Ä–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å—Ç–∞—Ä—à–µ 18 –ª–µ—Ç.
// –ò–∑ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å—Ç–∞—Ä—à–µ 18 –ª–µ—Ç –≤—ã–±–µ—Ä–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ—Ö, —É –∫–æ–≥–æ —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –±–æ–ª—å—à–µ 75.
// –í–µ—Ä–Ω—ë—Ç –º–∞—Å—Å–∏–≤ —Ç–æ–ª—å–∫–æ —Å –∏–º–µ–Ω–∞–º–∏ —ç—Ç–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.

// –ü–æ–¥—Å–∫–∞–∑–∫–∏:
// –ò—Å–ø–æ–ª—å–∑—É–π –º–µ—Ç–æ–¥ filter –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å—Ç–∞—Ä—à–µ 18 –ª–µ—Ç.
// –í—ã—á–∏—Å–ª–∏ —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª —Å—Ç—É–¥–µ–Ω—Ç–∞, —Å–ª–æ–∂–∏–≤ –≤—Å–µ –æ—Ü–µ–Ω–∫–∏ –∏ –ø–æ–¥–µ–ª–∏–≤ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ü–µ–Ω–æ–∫.
// –ò—Å–ø–æ–ª—å–∑—É–π map, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ —Ç–æ–ª—å–∫–æ —Å –∏–º–µ–Ω–∞–º–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.

const studentss = [
  { name: "–ê–ª–µ–∫—Å–µ–π", age: 17, grades: [60, 70, 80] },
  { name: "–ú–∞—Ä–∏—è", age: 19, grades: [85, 90, 95] },
  { name: "–ò–≤–∞–Ω", age: 21, grades: [50, 60, 55] },
  { name: "–û–ª—å–≥–∞", age: 20, grades: [78, 82, 80] },
  { name: "–°–µ—Ä–≥–µ–π", age: 18, grades: [70, 75, 80] },
];

// –§–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å—Ç–∞—Ä—à–µ 18 –ª–µ—Ç –∏ —É –∫–æ—Ç–æ—Ä—ã—Ö —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –±–æ–ª—å—à–µ 75
let filt = studentss
  .filter((value) => value.age > 18) // –§–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å—Ç–∞—Ä—à–µ 18 –ª–µ—Ç
  .filter((value) => {
    // –í—ã—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª
    let middleGrade =
      value.grades.reduce((acc, num) => acc + num, 0) / value.grades.length;
    return middleGrade > 75; // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –±–æ–ª—å—à–µ 75
  })
  .map((value) => value.name); // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–º–µ–Ω–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤

console.log(filt);

// --- --- --- --- --- --- --- --- --- --- --- ---

// 1. forEach((value,index,array) => { })
// 2. filter((value,index) => { })
// 3. find((value,index) => { })
// 4. map((value,index) => { })
// 5. reduce((acc, next) => { })

// --- --- --- --- --- --- --- --- --- --- --- ---

// 1Ô∏è‚É£ forEach(value, index)
// üìå –í—ã–≤–µ–¥–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∏—Ö –∏–Ω–¥–µ–∫—Å–∞–º–∏.

const fruits = ["üçé –Ø–±–ª–æ–∫–æ", "üçå –ë–∞–Ω–∞–Ω", "üçä –ê–ø–µ–ª—å—Å–∏–Ω"];

fruits.forEach((value, index) => {
  console.log(`–≠–ª–µ–º–µ–Ω—Ç ‚Ññ${index + 1}: ${value}`);
});

// –≠–ª–µ–º–µ–Ω—Ç ‚Ññ1: üçé –Ø–±–ª–æ–∫–æ
// –≠–ª–µ–º–µ–Ω—Ç ‚Ññ2: üçå –ë–∞–Ω–∞–Ω
// –≠–ª–µ–º–µ–Ω—Ç ‚Ññ3: üçä –ê–ø–µ–ª—å—Å–∏–Ω
// üìå –ì–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è?
// –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –º–∞—Å—Å–∏–≤—É –∏ —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å —Å –∫–∞–∂–¥—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º, —É—á–∏—Ç—ã–≤–∞—è –µ–≥–æ –∏–Ω–¥–µ–∫—Å.

// --- --- --- --- --- --- --- --- --- --- --- ---

// 2Ô∏è‚É£ filter(value, index)
// üìå –û—Å—Ç–∞–≤–∏–º —Ç–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —á—ë—Ç–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–∞—Ö.

const numbers6 = [10, 15, 20, 25, 30, 35];

const evenIndexNumbers = numbers6.filter((value, index) => index % 2 === 0);

console.log(evenIndexNumbers); // [10, 20, 30]
// üìå –ì–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è?
// –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –∏—Ö –∏–Ω–¥–µ–∫—Å—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–∑—è—Ç—å —Ç–æ–ª—å–∫–æ —á—ë—Ç–Ω—ã–µ –∏–ª–∏ –Ω–µ—á—ë—Ç–Ω—ã–µ).

// --- --- --- --- --- --- --- --- --- --- --- ---

// 3Ô∏è‚É£ find(value, index)
// üìå –ù–∞–π—Ç–∏ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å –Ω–µ—á—ë—Ç–Ω—ã–º –∏–Ω–¥–µ–∫—Å–æ–º.

const numbers7 = [4, 7, 10, 13, 16, 19];

const firstOddIndexNumber = numbers7.find((value, index) => index % 2 !== 0);

console.log(firstOddIndexNumber); // 7
// üìå –ì–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è?
// –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∫–∞–∫–æ–º—É-—Ç–æ –∫—Ä–∏—Ç–µ—Ä–∏—é, –≤–∫–ª—é—á–∞—è –µ–≥–æ –∏–Ω–¥–µ–∫—Å.

// --- --- --- --- --- --- --- --- --- --- --- ---

// 4Ô∏è‚É£ map(value, index)
// üìå –î–æ–±–∞–≤–∏–º –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –µ–≥–æ –Ω–æ–º–µ—Ä.

const students = ["–ê–ª–∏—Å–∞", "–ë–æ—Ä–∏—Å", "–í–∏–∫—Ç–æ—Ä"];

const numberedStudents = students.map(
  (value, index) => `${index + 1}. ${value}`
);

console.log(numberedStudents);
// ["1. –ê–ª–∏—Å–∞", "2. –ë–æ—Ä–∏—Å", "3. –í–∏–∫—Ç–æ—Ä"]
// üìå –ì–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è?
// –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∏—Å–ø–æ–ª—å–∑—É—è –µ–≥–æ –∏–Ω–¥–µ–∫—Å.

// --- --- --- --- --- --- --- --- --- --- --- ---

// 5Ô∏è‚É£ reduce(acc, value, index)
// üìå –°–æ–±–µ—Ä—ë–º —Å—Ç—Ä–æ–∫—É —Å –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.

const words = ["–ü—Ä–∏–≤–µ—Ç", "–∫–∞–∫", "–¥–µ–ª–∞"];

const sentence = words.reduce((acc, value, index) => {
  return acc + `${index + 1}) ${value} `;
}, "");

console.log(sentence);
// "1) –ü—Ä–∏–≤–µ—Ç 2) –∫–∞–∫ 3) –¥–µ–ª–∞ "
// üìå –ì–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è?
// –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å —Å—Ç—Ä–æ–∫—É, –∏—Å–ø–æ–ª—å–∑—É—è –∏–Ω–¥–µ–∫—Å—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

// --- --- --- --- --- --- --- --- --- --- --- ---

// üîπ –ò—Ç–æ–≥
// üî∏ forEach(value, index) ‚Äì –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –º–∞—Å—Å–∏–≤—É.
// üî∏ filter(value, index) ‚Äì –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –∏—Ö –∏–Ω–¥–µ–∫—Å–∞–º.
// üî∏ find(value, index) ‚Äì –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—é.
// üî∏ map(value, index) ‚Äì –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã, —É—á–∏—Ç—ã–≤–∞—è –∏—Ö –∏–Ω–¥–µ–∫—Å.
// üî∏ reduce(acc, value, index) ‚Äì –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ, –∏—Å–ø–æ–ª—å–∑—É—è –∏–Ω–¥–µ–∫—Å—ã.

// --- --- --- --- --- --- --- --- --- --- --- ---

// forEach - –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –º–∞—Å—Å–∏–≤—É –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–ø—Ä–∏–º–µ—Ä (–≤ –∫–æ–Ω—Å–æ–ª–∏)
// —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ ? –ù–ï–¢
// –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω–∏–∫? –ù–ï–¢

// --- --- --- --- --- --- --- --- --- --- --- ---

// filter - –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ —É—Å–ª–æ–≤–∏—é
// —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ ? –î–ê
// –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω–∏–∫? –ù–ï–¢

// --- --- --- --- --- --- --- --- --- --- --- ---

// find - –∏—â–µ—Ç –ø–µ—Ä–≤—ã–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π —ç–ª–µ–º–µ–Ω—Ç
// —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ ? –ù–ï–¢
// –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω–∏–∫? –ù–ï–¢

// --- --- --- --- --- --- --- --- --- --- --- ---

// map - –∏–∑–º–µ–Ω—è–µ—Ç/—Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç–æ–º
// —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ ? –î–ê
// –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω–∏–∫? –ù–ï–¢

// --- --- --- --- --- --- --- --- --- --- --- ---

// reduce - –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –º–∞—Å—Å–∏–≤ –≤ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ
// —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ ? –ù–ï–¢
// –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω–∏–∫? –ù–ï–¢

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ø—Ä–∞–∫—Ç–∏–∫–∞:

// forEach()

// let a = ["–æ–¥–∏–Ω", "–¥–≤–∞", "—Ç—Ä–∏", "—á–µ—Ç—ã—Ä–µ"]

// a.forEach((value, index) => {
//     console.log(`–ù–æ–º–µ—Ä: ${index + 1} ${value}`)
// })

// --- --- --- --- --- --- --- --- --- --- --- ---

// filter()

// let a = [1, 2, 3, 4, 5, 6]

// let re = a.filter((value, index) => { return (index + 1) % 2 === 0 })
// console.log(re)

// for (let i of a) { if (i % 2 === 0) { console.log(`${i}:—á—ë—Ç–Ω—ã–µ`) } else { console.log(`${i}: –Ω–µ —á—ë—Ç–Ω—ã–µ`) } }

// --- --- --- --- --- --- --- --- --- --- --- ---

// –°—É–º–º–∞ —á–∏—Å–µ–ª –º–∞—Å—Å–∏–≤–∞
// –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —É —Ç–µ–±—è –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª, –Ω–∞–ø—Ä–∏–º–µ—Ä, [1, 2, 3, 4, 5]. –¢–µ–±–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å—É–º–º—É –≤—Å–µ—Ö —ç—Ç–∏—Ö —á–∏—Å–µ–ª.

let ad = [1, 2, 3, 4, 5];
const resultatAzamat = ad.reduce((acc, num) => acc + num, 0);
console.log(resultatAzamat);

// --- --- --- --- --- --- --- --- --- --- --- ---

// –°–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
// –ë–µ—Ä—ë—à—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞—Ö–æ–¥–∏—à—å –≤ –Ω—ë–º —Å–ª–æ–≤–æ —Å —Å–∞–º—ã–º –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –±—É–∫–≤.
// –ù–∞–ø—Ä–∏–º–µ—Ä: –≤ "–Ø –ª—é–±–ª—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ" —Å–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ ‚Äî "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ".

function LongWord(arg) {
  return arg.split(" ").sort((a, b) => b.length - a.length)[0];
}

console.log(LongWord("–Ø –ª—é–±–ª—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å"));

// --- --- --- --- --- --- --- --- --- --- --- ---

// –¢–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä:

// –£ —Ç–µ—Ä–Ω–∞—Ä–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Ç—Ä–∏ –æ–ø–µ—Ä–∞–Ω–¥–∞

// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Å —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º - –≤—ã—Ä–∞–∂–µ–Ω–∏–µ

// –í—ã—Ä–∞–∂–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ

// –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: –¢–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä?

// –£—Å–ª–æ–≤–∏–µ ? –í—ã—Ä–∞–∂–µ–Ω–∏–µ 1 : –í—ã—Ä–∞–∂–µ–Ω–∏–µ 2

// –£—Å–ª–æ–≤–∏–µ ? –ª—é–±–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ(—É—Å–ª–æ–≤–∏–µ)
// –í—ã—Ä–∞–∂–µ–Ω–∏–µ 1 - –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –ø—Ä–∞–≤–¥–∏–≤–æ, —Ç–æ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –í—ã—Ä–∞–∂–µ–Ω–∏—è 1
// –í—ã—Ä–∞–∂–µ–Ω–∏–µ 2 - –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –ª–æ–∂–Ω–æ, —Ç–æ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –í—ã—Ä–∞–∂–µ–Ω–∏—è 2

let numberf = 5;
let resultf = numberf % 2 === 0 ? "–ß—ë—Ç–Ω–æ–µ" : "–ù–µ—á—ë—Ç–Ω–æ–µ";
console.log(resultf);

const value = 11;

value ? console.log("–£—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ") : console.log("–£—Å–ª–æ–≤–∏–µ –ª–æ–∂–Ω–æ");

// --- --- --- --- --- --- --- --- --- --- --- ---

// –¶–ò–ö–õ–´ –í JAVASCRIPT
// –ë–ï–ó –¶–ò–ö–õ–û–í:

// –ü–†–ò–ú–ï–† 1

// let i = 0
// console.log(i)
// i++
// console.log(i)
// i++
// console.log(i)
// i++
// console.log(i)
// i++
// console.log(i)
// i++

// –ü–†–ò–ú–ï–† 2

// const myArray = [true, 'abc', 10]

// console.log(myArray[0])
// console.log(myArray[1])
// console.log(myArray[2])

// –ü–†–ò–ú–ï–† 3

// const myObject = {
//     x: 10,
//     y: true,
//     z: 'abc'
// }

// console.log(myObject.x)
// console.log(myObject.y)
// console.log(myObject.z)

// –¶–ò–ö–õ–´:

// –ï–°–¢–¨ –†–ê–ó–ù–´–ï –¢–ò–ü–´ –¶–ò–ö–õ–û–í –í JAVASCRIPT
// –¢–ò–ü–´ –¶–ò–ö–õ–û–í:

// 1. for
// 2. for ... in ...
// 3. while
// 4. do ... while
// 5. for ... of ...

// --- --- --- --- --- --- --- --- --- --- --- ---

// –°–ê–ú–´–ô –ü–†–û–°–¢–û–ô –¶–ò–ö–õ for

// for (–ù–∞—á–∞–ª—å–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è; –£—Å–ª–æ–≤–∏–µ; –ò—Ç–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ) {
// –ë–ª–æ–∫ –∫–æ–¥–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º—ã–π –Ω–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
// }

// –ø—Ä–∏–º–µ—Ä:
for (let i = 0; i < 5; i++) {
  console.log(i);
}
// –∫–æ–≥–¥–∞ —Ü–∏–∫–ª —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è 5 = 5 –æ–Ω —Å—Ä–∞–∑—É –∂–µ –≤—ã—Ö–æ–¥–∏—Ç —Å —Ü–∏–∫–ª–∞ –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 4 = 5
// —Ç–æ –µ—Å—Ç—å 5 –æ—Å—Ç–∞—ë—Ç—Å—è –±–æ–ª—å—à–µ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ –∏–∑-–∑–∞ —É—Å–ª–æ–≤–∏—è

// --- --- --- --- --- --- --- --- --- --- --- ---

// –¶–∏–∫–ª While

// while (–£—Å–ª–æ–≤–∏–µ) {
// –ë–ª–æ–∫ –∫–æ–¥–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º—ã–π –Ω–∞
// –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
// }

// let i = 0

// while (i < 5) {
//     console.log(i)
//     i++
// }

// --- --- --- --- --- --- --- --- --- --- --- ---

// –¶–∏–∫–ª DO - WHILE

// do {
// –ë–ª–æ–∫ –∫–æ–¥–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º—ã–π –Ω–∞
// –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
// } while ( –£—Å–ª–æ–≤–∏–µ )

let i = 10;

do {
  console.log(i);
  i++;
} while (i < 5);

// --- --- --- --- --- --- --- --- --- --- --- ---

// –¶–∏–∫–ª FOR IN
// –î–ª—è —á–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: –ß—Ç–æ–±—ã –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å –∫–ª—é—á–∏ (–∏–Ω–¥–µ–∫—Å—ã –∏–ª–∏ —Å–≤–æ–π—Å—Ç–≤–∞) –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ –º–∞—Å—Å–∏–≤–∞.
// –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç: –û–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –∫–∞–∂–¥–æ–º—É –∫–ª—é—á—É –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ –º–∞—Å—Å–∏–≤–∞ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å –Ω–∏–º —Ä–∞–±–æ—Ç–∞—Ç—å.

// for...in ‚Äî —ç—Ç–æ –¥–ª—è –∫–ª—é—á–µ–π (—Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ –∏–Ω–¥–µ–∫—Å–æ–≤ –º–∞—Å—Å–∏–≤–∞).

const person3 = { name: "Alice", age: 25, city: "London" };

for (const key in person3) {
  console.log(key + ": " + person[key]);
}
// –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç:
// name: Alice
// age: 25
// city: London

// --- --- --- --- --- --- --- --- --- --- --- ---

// –¶–∏–∫–ª FOR OF
// –¶–∏–∫–ª for...of
// –î–ª—è —á–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: –ß—Ç–æ–±—ã –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –∏–ª–∏ —Å—Ç—Ä–æ–∫–∏.
// –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç: –û–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞ –∏–ª–∏ —Å—Ç—Ä–æ–∫–∏ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å –Ω–∏–º —Ä–∞–±–æ—Ç–∞—Ç—å.

// const fruits = ['apple', 'banana', 'cherry'];

// for (const fruit of fruits) {
//   console.log(fruit);
// }

// apple
// banana
// cherry

// --- --- --- --- --- --- --- --- --- --- --- ---

// forEach –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤

// 1. Object.keys(obj)
// –ß—Ç–æ –¥–µ–ª–∞–µ—Ç? –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∫–ª—é—á–µ–π (–Ω–∞–∑–≤–∞–Ω–∏–π —Å–≤–æ–π—Å—Ç–≤) –æ–±—ä–µ–∫—Ç–∞ obj.

// –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç?
// –ü—Ä–∏–º–µ—Ä:

// const user = {
//   name: "Alice",
//   age: 30,
//   isAdmin: true
// };

// const keys = Object.keys(user);
// console.log(keys); // ["name", "age", "isAdmin"]

// --- --- --- --- --- --- --- --- --- --- --- ---

// Object.values(obj)
// –ß—Ç–æ –¥–µ–ª–∞–µ—Ç? –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞ obj.

// –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç?
// –ü—Ä–∏–º–µ—Ä:

// const user = {
//   name: "Alice",
//   age: 30,
//   isAdmin: true
// };

// const values = Object.values(user);
// console.log(values); // ["Alice", 30, true]

// const myObject = {
//     x: 10,
//     y: true,
//     z: 'abc'
// }
// –≤–∞—Ä–∏–∞–Ω—Ç 1
// Object.keys(myObject).forEach(key => {
//     console.log(key, myObject[key])
// })
// –≤–∞—Ä–∏–∞–Ω—Ç 2
// Object.entries(myObject).forEach(([key, value]) => {
//     console.log(key, value)
// })

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ú–û–î–£–õ–ò
// –ú–æ–¥—É–ª–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
// –ú–æ–¥—É–ª–∏ –ø–æ–º–æ–≥–∞—é—Ç –∏–∑–±–µ–≥–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞

// –í—ã–Ω–µ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏—é –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–æ–¥—É–ª—å –∞ –ø–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–µ –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ

// –°–∏–Ω—Ç–∞–∫—Å–∏—Å
// EXPORT/IMPORT –°–ò–ù–¢–ê–ö–°–ò–°

// moduleOne.js
// export ...

// moduleTwo.js
// import ...

// –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª JS —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–º –º–æ–¥—É–ª–µ–º
// –∏ –ø–æ—Ç–æ–º —Å –ø–æ–º–æ—â—å—é EXPORT - —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —á–∞—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–∫–æ–≥–æ –º–æ–¥—É–ª—è
// –∏ –ø–æ—Ç–æ–º –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö –º—ã –º–æ–∂–µ–º IMPORT - –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
// —Ç–∞–º –≥–¥–µ –º—ã –∏—Ö EXPORT - —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏

// –ù–∞–∑–≤–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–æ–≥—É—Ç –Ω–µ —Å–æ–≤–ø–∞–¥–∞—Ç—å:
// export default myName
// import printMyName from 'link'
// –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è

// –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–æ–≥–æ –º–æ–¥—É–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω—É–∂–Ω–æ:
// —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º: module.mjs

// 1. –ú–æ–¥—É–ª–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–¥–Ω–æ—Ü–µ–ª–µ–≤—ã–º–∏
// 2. –†–∞—Å–ø–æ–ª–æ–≥–∞–π—Ç–µ –≤—Å–µ EXPORT –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤–Ω–∏–∑—É —Ñ–∞–π–ª–∞
// 3. –†–∞—Å–ø–æ–ª–æ–≥–∞–π—Ç–µ –≤—Å–µ IMPORT –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–≤–µ—Ä—Ö—É —Ñ–∞–π–ª–∞
// 4. –ü–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ EXPORT DEFAULT

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ö–õ–ê–°–°–´ –ò –ü–†–û–¢–û–¢–ò–ü–´
// –ö–õ–ê–°–°–´ –ü–û–ó–í–û–õ–Ø–Æ–¢ –°–û–ó–î–ê–í–ê–¢–¨ –ü–†–û–¢–û–¢–ò–ü–´ –î–õ–Ø –û–ë–™–ï–ö–¢–û–í

// –ù–ê –û–°–ù–û–í–ê–ù–ò–ò –ü–†–û–¢–û–¢–ò–ü–û–í –°–û–ó–î–ê–Æ–¢–°–Ø –≠–ö–ó–ï–ú–ü–õ–Ø–†–´
// –í–°–ï –≠–ö–ó–ï–ú–ü–õ–Ø–†–´ –ë–£–î–£–¢ –ù–ï –ó–ê–í–ò–°–ò–ú–´ –î–†–£–ì –û–¢ –î–†–£–ì–ê –ò –ë–£–î–£–¢ –ò–ú–ï–¢–¨ –°–í–û–ò –°–í–û–ô–°–¢–í–ê –ò –ú–ï–¢–û–î–´

// –≠–ö–ó–ï–ú–ü–õ–Ø–†–´ –ù–ê–°–õ–ï–î–£–Æ–¢ –°–í–û–ô–°–¢–í–ê –ò –ú–ï–¢–û–î–´ –ü–†–û–¢–û–¢–ò–ü–û–í

// CLASS - –ö–õ–ê–°–°

class Comment {
  constructor(text) {
    this.text = text;
    this.votesQty = 0;
  }
  // this - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞

  upvote() {
    this.votesQty += 1;
  }
}

// –°–û–ó–î–ê–ù–ò–ï –≠–ö–ó–ï–ú–ü–õ–Ø–†–ê

// –ö–ª–∞—Å—Å ‚Äî —ç—Ç–æ —à–∞–±–ª–æ–Ω. –≠–∫–∑–µ–º–ø–ª—è—Ä ‚Äî –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á–µ—Ä–µ–∑ new
// const firstComment = new Comment('First comment')

class Car {
  constructor(model) {
    this.model = model; // —Å–≤–æ–π—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
  }

  // –ú–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ Car.prototype
  startEngine() {
    console.log(`${this.model}: –î–≤–∏–≥–∞—Ç–µ–ª—å –∑–∞–ø—É—â–µ–Ω!`);
  }
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞
const tesla = new Car("Tesla");
tesla.startEngine(); // "Tesla: –î–≤–∏–≥–∞—Ç–µ–ª—å –∑–∞–ø—É—â–µ–Ω!"

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ó–ê–î–ê–ù–ò–ï: –°–æ–∑–¥–∞–π —Å–≤–æ–π "–ó–æ–æ–ø–∞—Ä–∫"
// –¶–µ–ª—å: –°–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å Animal –∏ –µ–≥–æ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–æ—Ç–æ—Ç–∏–ø—ã –∏ —Ü–µ–ø–æ—á–∫—É –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.

// –ß—Ç–æ –¥–µ–ª–∞–µ—Ç: –û–±—ä—è–≤–ª—è–µ—Ç –∫–ª–∞—Å—Å Animals (—à–∞–±–ª–æ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤).
class Animals {
  // –ß—Ç–æ –¥–µ–ª–∞–µ—Ç: –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞. –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ new Animals(...)
  constructor(name, sound) {
    // –ß—Ç–æ –¥–µ–ª–∞–µ—Ç: –°–æ–∑–¥–∞–µ—Ç —Å–≤–æ–π—Å—Ç–≤–æ name —É —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç –µ–º—É –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ name
    this.name = name;
    this.sound = sound;
  }

  // –ß—Ç–æ –¥–µ–ª–∞–µ—Ç: –û–±—ä—è–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É —Å –∏–º–µ–Ω–µ–º –∏ –∑–≤—É–∫–æ–º –∂–∏–≤–æ—Ç–Ω–æ–≥–æ.
  makeSound() {
    console.log(`${this.name} –≥–æ–≤–æ—Ä–∏—Ç: ${this.sound}!`);
  }
}
// –ü—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:
const lion = new Animals("–õ–µ–≤", "–†—Ä—Ä—Ä");
lion.makeSound(); // "–õ–µ–≤ –≥–æ–≤–æ—Ä–∏—Ç: –†—Ä—Ä—Ä!"

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ü–†–û–ú–ò–°–´ - Promises

// –ü–†–û–ú–ò–°–´ –ü–û–ó–í–û–õ–Ø–Æ–¢ –û–ë–†–ê–ë–ê–¢–´–í–ê–¢–¨ –û–¢–õ–û–ñ–ï–ù–ù–´–ï –í–û –í–†–ï–ú–ï–ù–ò –°–û–ë–´–¢–ò–Ø
// –ß–¢–û –ò–ú–ï–ï–¢–°–Ø –í–í–ò–î–£? –ü–†–ï–î–ü–û–õ–û–ñ–ò–õ –ß–¢–û –í–ê–ú –ù–ï–û–ë–•–û–î–ò–ú–û(–í–ê–®–ï–ô –ü–†–û–ì–†–ê–ú–ú–ï)
// JAVASCRIPT –ü–û–°–õ–ê–¢–¨ –ó–ê–ü–†–û–° –ù–ê –ö–ê–ö–û–ô –¢–û –£–î–ê–õ–ï–ù–ù–´–ô –°–ï–†–í–ï–†, –ò –ü–û–õ–£–ß–ò–¢–¨ –û–¢ –ù–ï–ì–û –û–¢–í–ï–¢
// –í–´ –ú–û–ñ–ï–¢–ï –ü–û–°–õ–ê–¢–¨ –ó–ê–ü–†–û–° –ü–û –ü–ö –°–ï–¢–ò –ß–ï–†–ï–ó –ò–ù–¢–ï–†–ù–ï–¢
// –ù–û –í–´ –ù–ï –ó–ù–ê–ï–¢–ï –ö–û–ì–î–ê –°–ï–†–í–ï–† –í–ê–ú –û–¢–í–ï–¢–ò–¢
// –û–ù –ú–û–ñ–ï–¢ –í–ê–ú –û–¢–í–ï–¢–ò–¢–¨ –ß–ï–†–ï–ó 100 –º–∏–ª–ª–∏ —Å–µ–∫—É–Ω–¥, –º–æ–∂–µ—Ç —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã, –ª–∏–±–æ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
// –¢–û –ï–°–¢–¨ –≠–¢–û –û–¢ –ù–ê–° –ù–ï –ó–ê–í–ò–°–ò–¢ –ò –ù–ï –ó–ê–í–ò–°–ò–¢ –û–¢ –í–ê–®–ï–ì–û –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
// –ù–û –ü–†–ò –≠–¢–û–ú –í–ê–®–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–ï –î–û–õ–ñ–ù–û –û–ñ–ò–î–ê–¢–¨ –û–¢–í–ï–¢–ê –û–¢ –°–ï–†–í–ï–†–ê
// –¢–ê–ö –í–û–¢ –í–û–ü–†–û–°, –ß–¢–û –î–ï–õ–ê–¢–¨ –í–ê–®–ï–ì–û –ü–†–ò–õ–û–ñ–ï–ù–ò–Æ –ü–û–ö–ê –û–ù–ê –û–ñ–ò–î–ê–ï–¢ –û–¢–í–ï–¢–ê –û–¢ –£–î–ê–õ–ï–ù–ù–û–ì–û –°–ï–†–í–ï–†–ê
// –í–ê–†–ò–ê–ù–¢–ê 2, –í–ê–®–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–ï –ú–û–ñ–ï–¢ –í–´–ü–û–õ–ù–Ø–¢–¨ –î–†–£–ì–ò–ï –î–ï–ô–¢–°–í–ò–Ø –ü–û–ö–ê –û–ñ–ò–î–ê–ï–¢,
// –õ–ò–ë–û –ñ–ï –ù–ï –í–´–ü–û–õ–ù–Ø–¢–¨ –ù–ò–ß–ï–ì–û –î–†–£–ì–û–ì–û.
// –¢–ê–ö –í–û–¢ 2 –í–ê–†–ò–ê–ù–¢ –ù–ï –ñ–ï–õ–ê–¢–ï–õ–ï–ù. –ü–û–ß–ï–ú–£?
// –ü–û–¢–û–ú–£ –ß–¢–û –ï–°–õ–ò –£ –í–ê–° –§–†–û–ù–¢-–ï–ù–î –ü–†–ò–õ–û–ñ–ï–ù–ò–ï –ò –í –≠–¢–û–ú –§–†–û–ù–¢-–ï–ù–î –ü–†–ò–õ–û–ñ–ï–ù–ò–ò
// –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –ú–û–ì–£–¢ –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–û–í–ê–¢–¨ –°–û –°–¢–†–ê–ù–ò–¶–û–ô, –ù–ê–ñ–ò–ú–ê–¢–¨ –ù–ê –ö–ù–û–ü–ö–ò, –ó–ê–ü–û–õ–ù–Ø–¢–¨ –§–û–†–ú–´
// –¢–û –ü–û–ö–ê –í–´ –ñ–î–ï–¢–ï –í–´ –ü–†–û–°–¢–û –ù–ê–ü–†–û–°–¢–û –ù–ï –°–ú–û–ñ–ï–¢–ï –û–ë–†–ê–ë–ê–¢–´–í–ê–¢–¨ –ù–ò–ö–ê–ö–ò–ï –î–ï–ô–°–¢–í–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
// –ù–ï –°–ú–û–ñ–ï–¢–ï –†–ï–ê–ì–ò–†–û–í–ê–¢–¨ –° –ü–û–ú–û–©–¨–Æ JAVASCRIPT, –ü–û–¢–ï–†–Ø–ï–¢–°–Ø –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–û–°–¢–¨ –ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –í–ï–ë-–°–ê–ô–¢–ê–ú–ò
// –ü–û–¢–û–ú–£ –í–´ –î–û–õ–ñ–ù–´ –ò–ú–ï–¢–¨ –í–û–ó–ú–û–ñ–ù–û–°–¢–¨ –í–´–ü–û–õ–ù–Ø–¢–¨ –î–†–£–ì–ò–ï –î–ï–ô–°–¢–í–ò–Ø –ü–û–ö–ê –í–´ –û–ñ–ò–î–ê–ï–¢–ï –û–¢–í–ï–¢–ê –û–¢ –°–ï–†–í–ï–†–ê
// –ò –í–û–¢ –¢–ê–ö–û–ô –ó–ê–ü–†–û–° –ö–û–¢–û–†–´–ô –í–´ –ü–û–°–õ–ê–õ–ò –ù–ê –°–ï–†–í–ï–† –ù–ê–ó–´–í–ê–ï–¢–°–Ø
// –ê–°–°–ò–ù–•–†–û–ù–ù–´–ú –ó–ê–ü–†–û–°–û–ú –¢–û –ï–°–¢–¨ –í–´ –ù–ï –ó–ù–ê–ï–¢–ï –ö–û–ì–î–ê –í–´ –ü–û–õ–£–ß–ò–¢–ï –û–¢–í–ï–¢,
// –¢–û –ï–°–¢–¨ –û–¢–í–ï–¢ –ü–†–ò–•–û–î–ò–¢ –ê–°–°–ò–ù–•–†–û–ù–û, –ù–ï –°–†–ê–ó–£ –ñ–ï –ü–û–°–õ–ï –ó–ê–ü–†–û–°–ê –ê –ß–ï–†–ï–ó –ö–ê–ö–û–ï –¢–û –í–†–ï–ú–Ø
// –ò –í –≠–¢–û–¢ –ò–ù–¢–ï–†–í–ê–õ –í–´ –î–û–õ–ñ–ù–´ –ò–ú–ï–¢–¨ –í–û–ó–ú–û–ñ–ù–û–°–¢–¨ –ó–ê–ù–ò–ú–ê–¢–¨–°–Ø –î–†–£–ì–ò–ú–ò –î–ï–õ–ê–ú–ò
// –í–´–ü–û–õ–ù–Ø–¢–¨ –î–†–£–ì–ò–ï –ó–ê–î–ê–ß–ò –í –í–ê–®–ï–ú JS –ü–†–ò–õ–û–ñ–ï–ù–ò–ò,
// –¢–ê–ö –í–û–¢ –° –ü–û–ú–û–©–¨–Æ –ü–†–û–ú–ò–°–û–í –ú–û–ñ–ù–û –í JS –û–ë–†–ê–ë–ê–¢–´–í–ê–¢–¨ –û–¢–õ–û–ñ–ï–ù–ù–´–ï –í–û –í–†–ï–ú–ï–ù–ò –°–û–ë–´–¢–ò–Ø
// –î–†–£–ì–û–ô –ü–†–ò–ú–ï–†:
// –≠–¢–û –ó–ê–ü–ò–°–¨ –î–ê–ù–ù–´–• –í –ë–ê–ó–£ –î–ê–ù–ù–´–•
// –ë–ê–ó–ê –î–ê–ù–ù–´–• –ù–ê–•–û–î–ò–¢–°–Ø –ù–ê –î–†–£–ì–û–ú –°–ï–†–í–ï–†–ï –í–´ –ü–û–°–õ–ê–õ–ò –ó–ê–ü–†–û–° –≠–¢–û–ô –ë–ê–ó–ï –° –ü–†–û–°–¨–ë–û–ô –ó–ê–ü–ò–°–ê–¢–¨
// –ö–ê–ö–ò–ï –¢–û –î–ê–ù–ù–´–ï –í –ë–ê–ó–£, –ù–û –í–´ –ù–ï –ó–ù–ê–ï–¢–ï –°–ö–û–õ–¨–ö–û –í–†–ï–ú–ï–ù–ò –ó–ê–ô–ú–ï–¢ –¢–ê–ö–ê–Ø –ü–†–û–¶–ï–î–£–†–ê –ó–ê–ü–ò–°–ò
// –ú–û–ñ–ï–¢ 1 –°–ï–ö–£–ù–î–£ –ú–û–ñ–ï–¢ 2 –°–ï–ö–£–ù–î–´,
// –ò –ü–û –¢–û–ú–£ –°–ù–û–í–ê –¢–ê–ö–ò –≠–¢–û –ê–°–°–ò–ù–•–†–û–ù–ù–´–ô –ó–ê–ü–†–û–° –ò –ö–û–ì–î–ê –í–´ –ü–û–õ–£–ß–ò–¢–ï –û–¢–í–ï–¢ –í–´ –î–û–õ–ñ–ù–´ –ï–ì–û –û–ë–†–ê–ë–û–¢–ê–¢–¨

// –ü–†–û–ú–ò–° - –≠–¢–û –û–ë–ï–©–ê–ù–ò–ï –ü–†–ï–î–û–°–¢–ê–í–ò–¢–¨ –†–ï–ó–£–õ–¨–¢–ê–¢ –ü–û–ó–ñ–ï,
// –ú–´ –û–¢–ü–†–ê–í–ò–õ–ò –ó–ê–ü–†–û–° –ù–ê –£–î–ê–õ–ï–ù–ù–´–ô –°–ï–†–í–ï–† –ú–´ –ù–ï –ó–ù–ê–ï–ú –û–¢–í–ï–¢–ò–¢ –û–ù –ù–ê–ú –ò–õ–ò –ù–ï –û–¢–í–ï–¢–ò–¢
// –ö–ê–ö–ò–ï –î–ê–ù–ù–´–ï –û–ù –ù–ê–ú –ü–†–ò–®–õ–ï–¢, –ú–´ –ù–ï –ó–ù–ê–ï–ú –ö–ê–ö–û–ô –ë–£–î–ï–¢ –†–ï–ó–£–õ–¨–¢–ê–¢ –ù–ê–®–ï–ì–û –ó–ê–ü–†–û–°–ê
// –ù–û –° –ü–û–ú–û–©–¨–Æ–Æ –ü–†–û–ú–ò–°–ê –ú–´ –°–ú–û–ñ–ï–ú –ü–û–°–¢–ê–í–ò–¢–¨ –ù–ê –û–ñ–ò–î–ê–ù–ò–ï –ü–û–õ–£–ß–ï–ù–ò–Ø –†–ï–ó–£–õ–¨–¢–ê–¢–ê
// –¢–û–ñ–ï –°–ê–ú–û–ï –ö–ê–°–ê–ï–¢–°–Ø –ò –° –ü–†–ò–ú–ï–†–û–ú –° –ë–ê–ó–û–ô –î–ê–ù–ù–´–•
// –ú–´ –ü–û–°–õ–ê–õ–ò –ó–ê–ü–†–û–° –í –ë–î –° –ü–†–û–°–¨–ë–û–ô –ó–ê–ü–ò–°–ê–¢–¨ –î–ê–ù–ù–´–ï –ò –ë–î –ß–ï–†–ï–ó –ö–ê–ö–û–ï –¢–û –í–†–ï–ú–Ø –û–¢–í–ï–¢–ò–¢

// –ò–¢–û–ì:
// –ü–†–û–ú–ò–° - –≠–¢–û –û–ë–ï–©–ê–ù–ò–ï –ü–†–ï–î–û–°–¢–ê–í–ò–¢–¨ –†–ï–ó–£–õ–¨–¢–ê–¢ –ù–ï –ú–ì–ù–û–í–ï–ù–ù–û, –ê –ß–ï–†–ï–ó –ö–ê–ö–û–ï –¢–û –í–†–ï–ú–Ø

// –¢–ê–ö –ñ–ï –ü–†–û–ú–ò–° –ú–û–ñ–ï–¢ –í–ï–†–ù–£–¢–¨ –û–®–ò–ë–ö–£,
// –ü–†–ò–ú–ï–†:
// –î–ê–ù–ù–´–ï –ü–†–û–ß–ï–°–¢–¨ –° –ö–ê–ö–û–ô –¢–û –£–î–ê–õ–ï–ù–ù–û–ô –ë–î –ù–ï –í–û–ó–ú–û–ñ–ù–û
// –ù–û –ü–†–ò –≠–¢–û–ú –ù–ê–®–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–ï –¢–ê–ö –ñ–ï –î–û–õ–ñ–ù–û –ö–ê–ö–ò–ú –¢–û –û–ë–†–ê–ó–û–ú –î–û–õ–ñ–ù–û –û–ë–†–ê–ë–û–¢–ê–¢–¨

// –£ –ü–†–û–ú–ò–°–ê –ï–°–¢–¨ 3 –°–û–°–¢–û–Ø–ù–ò–Ø:

// –°–û–°–¢–û–Ø–ù–ò–Ø –ü–†–û–ú–ò–°–ê -
// –ö–û–ì–î–ê –ü–†–û–ú–ò–° –¢–û–õ–¨–ö–û –°–û–ó–î–ê–ï–¢–°–Ø –£ –ù–ï–ì–û –ë–£–î–ï–¢ –°–û–°–¢–û–Ø–ù–ò–ï –û–ñ–ò–î–ê–ù–ò–Ø, –õ–ò–ë–û –†–ï–ó–£–õ–¨–¢–ê–¢–ê –õ–ò–ë–û –û–®–ò–ë–ö–ò
// –ö–û–ì–î–ê –ü–†–û–ú–ò–° –í–ï–†–ù–£–õ –ö–ê–ö–û–ô-–¢–û –†–ï–ó–£–õ–¨–¢–ê–¢ –û–ù –°–ß–ò–¢–ê–ï–¢–°–Ø –ò–°–ü–û–õ–ù–ï–ù–´–ú, –¢–û –ï–°–¢–¨ –ü–†–û–ú–ò–° –ò–°–ü–û–õ–ù–ï–ù –ò –†–ï–ó–£–õ–¨–¢–ê–¢ –ú–û–ñ–ï–¢ –ë–´–¢–¨ –û–ë–™–ï–ö–¢ –° –î–ê–ù–ù–´–ú–ò –õ–ò–ë–û –ú–ê–°–°–ò–í –î–û–ö–£–ú–ï–ù–¢–û–í
// –ò 3 –°–û–°–¢–û–Ø–ù–ò–ï - –û–¢–ö–õ–û–ù–ï–ù: –ï–°–õ–ò –í–û–ó–ù–ò–ö–õ–ê –ö–ê–ö–ê–Ø-–¢–û –û–®–ò–ë–ö–ê –¢–û –ü–†–û–ú–ò–° –ú–û–ñ–ù–û –û–¢–ö–õ–û–ù–ò–¢–¨

// –î—Ä—É–≥–∏–º–∏ —Å–ª–æ–≤–∞–º–∏:
// pending (–æ–∂–∏–¥–∞–Ω–∏–µ) ‚Äî –æ–ø–µ—Ä–∞—Ü–∏—è –µ—â—ë –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è.
// fulfilled (—É—Å–ø–µ—Ö) ‚Äî –æ–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ.
// rejected (–æ—à–∏–±–∫–∞) ‚Äî –æ–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π.

// –°–û–ó–î–ê–ù–ò–ï –ü–†–û–ú–ò–°–ê: –ß–¢–û –¢–ê–ö–û–ï –ü–†–û–ú–ò–°? –≠–¢–û –û–ë–™–ï–ö–¢ –í JS

// const myPromise = new Promise((resolve, reject) => {
// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
// –í–Ω—É—Ç—Ä–∏ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω—É–∂–Ω–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –≤—ã–∑—ã–≤–∞—Ç—å
// –æ–¥–Ω—É –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π resolve –∏–ª–∏ reject
// })

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ü–û–õ–£–ß–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–ê –ü–†–û–ú–ò–°–ê

// –ü–†–ò–ú–ï–† –ü–û–î –ö–ê–ü–û–¢–û–ú:
// myPromise
// .then(value => {
// –î–µ–π—Å—Ç–≤–∏—è –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ü—Ä–æ–º–∏—Å–∞
// –ó–Ω–∞—á–µ–Ω–∏–µ value - —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –≤ –≤—ã–∑–æ–≤–µ
// —Ñ—É–Ω–∫—Ü–∏–∏ resolve –≤–Ω—É—Ç—Ä–∏ –ü—Ä–æ–º–∏—Å–∞
// })
// .catch(error => {
// –î–µ–π—Å—Ç–≤–∏—è –≤ —Å–ª—É—á–∞–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ü—Ä–æ–º–∏—Å–∞
// –ó–Ω–∞—á–µ–Ω–∏–µ error - —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –≤ –≤—ã–∑–æ–≤–µ
// —Ñ—É–Ω–∫—Ü–∏–∏ reject –≤–Ω—É—Ç—Ä–∏ –ü—Ä–æ–º–∏—Å–∞
// })

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ü–û–õ–£–ß–ï–ù–ò–ï –î–ê–ù–ù–´–• –° –ü–û–ú–û–©–¨–Æ FETCH API

// fetch('https://jsonplaceholder.typicode.com/todos')
//     .then(response => response.json())
//     .then(json => console.log(json))
//     .catch(error => console.log(error))

// –ü—Ä–∏–º–µ—Ä –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ:

// fetch('https://jsonplaceholder.typicode.com/todos')
//     .then(response => {
//         console.log(response)
//         return response.json()
//     })
//     .then(json => console.log(json))
//     .catch(error => console.log(error))

// --- --- --- --- --- --- --- --- --- --- --- ---

// JSON - –æ—Ç–ø—Ä–∞–≤–∫–∞ JavaScript –æ–±—ä–µ–∫—Ç–æ–≤ –ø—Ä–æ—Å—Ç–æ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫

// --- --- --- --- --- --- --- --- --- --- --- ---

// ASYNC/AWAIT => —ç—Ç–æ:
// –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ô –°–ò–ù–¢–ê–ö–°–ò–° –î–õ–Ø –£–ü–†–û–©–ï–ù–ò–Ø –†–ê–ë–û–¢–´ –° –ü–†–û–ú–ò–°–ê–ú–ò
// –û–ù –ü–û–Ø–í–ò–õ–°–Ø –í ES6 –í 2015 –ì–û–î–£
//  –ß–¢–û –ñ–ï –¢–ê–ö–û–ï –ê–°–°–ò–ù–•–†–û–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø? –í–ú–ï–°–¢–û –ö–ê–ö–û–ì–û-–¢–û –ó–ù–ê–ß–ï–ù–ò–Ø - –í–û–ó–í–†–ê–©–ê–ï–¢ –ü–†–û–ú–ò–°

// –ê–°–ò–ù–•–†–û–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø

// async function asyncFn() {
// –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ü—Ä–æ–º–∏—Å
// }

// –°–¢–†–ï–õ–û–ß–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –í –ê–°–°–ò–ù–•–†–û–ù–ù–û–°–¢–ò
// const asyncFn = async () => {
// –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ü—Ä–æ–º–∏—Å
// }

// async/await => async –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–º–∏—Å, await - –æ–∂–∏–¥–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø—Ä–æ–º–∏—Å–∞ (—Ç–æ –µ—Å—Ç—å –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è –ø–æ–∫–∞ –ø—Ä–æ–º–∏—Å –Ω–µ –≤—ã–¥–∞—Å—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç)

// –û–ñ–ò–î–ê–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–ê AWAIT

const timerPromise = () =>
  new Promise((resolve, reject) => setTimeout(() => resolve(), 2000));

const asyncFn = async () => {
  console.log("Timer starts");
  const startTime = performance.now();
  await timerPromise();
  const endTime = performance.now();
  console.log("Timer ended", endTime - startTime);
};

// --- --- --- --- --- --- --- --- --- --- --- ---

// full video - https://youtu.be/CxgOKJh4zWE?si=SboM-2YLpnxG6Qsj

// --- --- --- --- --- --- --- --- --- --- --- ---

// üîπ –ü—Ä–æ–º–∏—Å (Promise)
// Promise ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏. –£ –Ω–µ–≥–æ –µ—Å—Ç—å —Ç—Ä–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è:

// pending (–æ–∂–∏–¥–∞–Ω–∏–µ) ‚Äî –æ–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è.
// fulfilled (—É—Å–ø–µ—Ö) ‚Äî –æ–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ.
// rejected (–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ) ‚Äî –æ–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π.

// --- --- --- --- --- --- --- --- --- --- --- ---

console.log('–ù–∞—á–∞–ª–æ');

setTimeout(() => {
  console.log('–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏');
}, 2000);

console.log('–ö–æ–Ω–µ—Ü');

// --- --- --- --- --- --- --- --- --- --- --- ---

// Spread –æ–ø–µ—Ä–∞—Ç–æ—Ä 

const arr = [1, 2, 3];
const newArrr = [...arr]; // –ö–æ–ø–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –≤ –Ω–æ–≤—ã–π
console.log(newArrr); // [1, 2, 3]

// --- --- --- --- --- --- --- --- --- --- --- ---

// Scope (–û–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏) ‚Äî —ç—Ç–æ –∫–æ–Ω—Ü–µ–ø—Ü–∏—è, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∞—è, –≥–¥–µ –≤ –∫–æ–¥–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å (–¥–æ—Å—Ç—É–ø–∞—Ç—å—Å—è –∫) –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.

// –ü—Ä–∏–º–µ—Ä:

let globalVar = "–Ø –≥–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è"; // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏

function exampleFunction() {
  let localVar = "–Ø –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏"; // –õ–æ–∫–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π scope)
  console.log(globalVar); // ‚úÖ –î–æ—Å—Ç—É–ø –∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
  console.log(localVar); // ‚úÖ –î–æ—Å—Ç—É–ø –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
}

exampleFunction();

console.log(globalVar); // ‚úÖ –î–æ—Å—Ç—É–ø –∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
console.log(localVar); // ‚ùå –û—à–∏–±–∫–∞! –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–∏

// –†–∞–∑–±–æ—Ä:
// globalVar ‚Äî –≥–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –¥–æ—Å—Ç—É–ø–Ω–∞—è –≤–µ–∑–¥–µ.
// localVar ‚Äî –ª–æ–∫–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤–Ω—É—Ç—Ä–∏ exampleFunction(), –¥–æ—Å—Ç—É–ø–Ω–∞—è —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
// –í—ã–∑–æ–≤ console.log(localVar); –≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —Å–≤–æ–µ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏.
// –≠—Ç–æ –æ—Å–Ω–æ–≤–∞ —Ä–∞–±–æ—Ç—ã scope –≤ JavaScript.

// --- --- --- --- --- --- --- --- --- --- --- ---





// --- --- --- --- --- --- --- --- --- --- --- ---
