// === –ò–∑—É—á–µ–Ω–∏–µ JavaScript ===

// === –°—Å—ã–ª–æ—á–Ω—ã–π —Ç–∏–ø - object: [] , {} ===

// –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç objectA
const objectA = {
    propertyA: 10,
    propertyB: true,
};

// –ö–æ–ø–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ objectA –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é copyOfA
const copyOfA = objectA;

// –ò–∑–º–µ–Ω—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ —Å—Å—ã–ª–∫—É
copyOfA.propertyA = 20;
copyOfA.propertyC = "abc";

// –ü–æ—Å–∫–æ–ª—å–∫—É –æ–±—ä–µ–∫—Ç—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø–æ —Å—Å—ã–ª–∫–µ, –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç—Ä–∞–∑—è—Ç—Å—è –Ω–∞ objectA
console.log(objectA); // { propertyA: 20, propertyB: true, propertyC: 'abc' }

// --- --- --- --- --- --- --- --- --- --- --- ---

// === –ë–∞–∑–æ–≤—ã–π –æ–±—ä–µ–∫—Ç ===
const cityInfo = {
    city: "New York",
};

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
cityInfo.popular = true;

console.log(cityInfo); // { city: 'New York', popular: true }

// --- --- --- --- --- --- --- --- --- --- --- ---

// === –ú–ï–¢–û–î–´ –û–ë–™–ï–ö–¢–û–í ===

// –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç hero —Å –º–µ—Ç–æ–¥–∞–º–∏
const hero = {
    name: "–°—É–ø–µ—Ä–º–µ–Ω",

    // –ú–µ—Ç–æ–¥: –≥–µ—Ä–æ–π –±–µ–∂–∏—Ç
    run() {
        console.log(`${this.name} –±–µ–∂–∏—Ç!`);
    },

    // –ú–µ—Ç–æ–¥: –≥–µ—Ä–æ–π –ø—Ä—ã–≥–∞–µ—Ç
    jump() {
        console.log(`${this.name} –ø—Ä—ã–≥–∞–µ—Ç!`);
    },

    // –ú–µ—Ç–æ–¥: –≥–µ—Ä–æ–π –∞—Ç–∞–∫—É–µ—Ç
    attack() {
        console.log(`${this.name} –∞—Ç–∞–∫—É–µ—Ç –≤—Ä–∞–≥–∞!`);
    },
};

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥—ã –æ–±—ä–µ–∫—Ç–∞ hero
hero.run();    // "–°—É–ø–µ—Ä–º–µ–Ω –±–µ–∂–∏—Ç!"
hero.jump();   // "–°—É–ø–µ—Ä–º–µ–Ω –ø—Ä—ã–≥–∞–µ—Ç!"
hero.attack(); // "–°—É–ø–µ—Ä–º–µ–Ω –∞—Ç–∞–∫—É–µ—Ç –≤—Ä–∞–≥–∞!"

// --- --- --- --- --- --- --- --- --- --- --- ---

// –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç user —Å –º–µ—Ç–æ–¥–∞–º–∏
const user = {
    name: "Azamat",

    // –ú–µ—Ç–æ–¥: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç
    say() {
        console.log(`${this.name} –≥–æ–≤–æ—Ä–∏—Ç!`);
    },

    // –ú–µ—Ç–æ–¥: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ
    do() {
        console.log(`${this.name} –¥–µ–ª–∞–µ—Ç —á—Ç–æ-—Ç–æ`);
    },
};

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥—ã –æ–±—ä–µ–∫—Ç–∞ user
user.say(); // "Azamat –≥–æ–≤–æ—Ä–∏—Ç!"
user.do();  // "Azamat –¥–µ–ª–∞–µ—Ç —á—Ç–æ-—Ç–æ"

// --- --- --- --- --- --- --- --- --- --- --- ---

const stringifiedUser = JSON.stringify(user); // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ–±—ä–µ–∫—Ç user –≤ —Å—Ç—Ä–æ–∫—É —Ñ–æ—Ä–º–∞—Ç–∞ JSON
console.log(JSON.parse(stringifiedUser));

// 1. –ß—Ç–æ —Ç–∞–∫–æ–µ JSON.stringify()?
// –ú–µ—Ç–æ–¥ JSON.stringify()
// –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞, –º–∞—Å—Å–∏–≤–∞ –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏–º–∏—Ç–∏–≤–Ω–æ–≥–æ —Ç–∏–ø–∞
// (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–∏—Å–ª–∞, —Å—Ç—Ä–æ–∫–∏, –±—É–ª–µ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è) –≤ —Å—Ç—Ä–æ–∫—É —Ñ–æ—Ä–º–∞—Ç–∞ JSON. –≠—Ç–æ —É–¥–æ–±–Ω–æ
// –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ —Å–µ—Ç—å –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö –≤ —Ñ–∞–π–ª–µ.

// 2. –ú–µ—Ç–æ–¥ JSON.parse() –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ–±—Ä–∞—Ç–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å JSON.stringify():
// –æ–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ—ë –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ–±—ä–µ–∫—Ç, –º–∞—Å—Å–∏–≤ –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏–º–∏—Ç–∏–≤–Ω–æ–≥–æ —Ç–∏–ø–∞.

// –ò–¢–û–ì:
// JSON.stringify() –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç, –ø—Ä–µ–æ–±—Ä–∞–∑—É—è –µ–≥–æ –≤ —Å—Ç—Ä–æ–∫—É —Ñ–æ—Ä–º–∞—Ç–∞ JSON.
// JSON.parse() –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ—ë –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ–±—ä–µ–∫—Ç.

// --- --- --- --- --- --- --- --- --- --- --- ---

let number = 10;

if (number <= 10) {
    console.log("–í–∞–º –º–µ–Ω—å—à–µ 10 –ª–µ—Ç");
} else {
    console.log("–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω");
}

// --- --- --- --- --- --- --- --- --- --- --- ---

let temperature = 10;

if (temperature > 30) {
    console.log("–ñ–∞—Ä–∫–æ");
} else if (temperature > 15) {
    console.log("–¢–µ–ø–ª–æ");
} else if (temperature > 0) {
    console.log("–ü—Ä–æ—Ö–ª–∞–¥–Ω–æ");
} else {
    console.log("–•–æ–ª–æ–¥–Ω–æ");
}

// --- --- --- --- --- --- --- --- --- --- --- ---

let stringExample = "azamat";  // —Å—Ç—Ä–æ–∫–∞ —Å –¥–ª–∏–Ω–æ–π 6 —Å–∏–º–≤–æ–ª–æ–≤

if (stringExample.length > 7) {  // –ø—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –±–æ–ª—å—à–µ 7
    console.log("–Ω–µ –±–æ–ª—å—à–µ 7");
} else if (stringExample.length > 5) {  // –ø—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –±–æ–ª—å—à–µ 5
    console.log("6 –±–æ–ª—å—à–µ —á–µ–º 5");  // —ç—Ç–æ —É—Å–ª–æ–≤–∏–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ 6
} else {  // –µ—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —É—Å–ª–æ–≤–∏–π –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è
    console.log("–í –∏—Ç–æ–≥–µ –Ω–µ –Ω–∞—à–µ–ª –ø–æ–¥—Ö–æ–¥—è—â–∏–π");
}

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ü—Ä–∏–º–∏—Ç–∏–≤–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö:

// Number ‚Äî —á–∏—Å–ª–∞(—Ü–µ–ª—ã–µ –∏ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π): 5, 10.3, -7.
// String ‚Äî —Å—Ç—Ä–æ–∫–∏(—Ç–µ–∫—Å—Ç—ã): "Hello", 'World'.
// Boolean ‚Äî –±—É–ª–µ–≤—ã –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ª–∏–±–æ true(–∏—Å—Ç–∏–Ω–∞), –ª–∏–±–æ false(–ª–æ–∂—å).
// Null ‚Äî —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è.
// Undefined ‚Äî –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –µ–π –Ω–µ –ø—Ä–∏—Å–≤–æ–µ–Ω–æ –¥—Ä—É–≥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
// Symbol ‚Äî —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–ª—é—á–µ–π –≤ –æ–±—ä–µ–∫—Ç–∞—Ö.
// BigInt ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –æ—á–µ–Ω—å –±–æ–ª—å—à–∏–º–∏ —á–∏—Å–ª–∞–º–∏, –ø—Ä–µ–≤—ã—à–∞—é—â–∏–º–∏ –¥–∏–∞–ø–∞–∑–æ–Ω —Ç–∏–ø–æ–≤ Number.
// –û–±—ä–µ–∫—Ç—ã ‚Äî —ç—Ç–æ —Å–ª–æ–∂–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤–∫–ª—é—á–∞—è —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –¥—Ä—É–≥–∏–µ –æ–±—ä–µ–∫—Ç—ã.–ù–∞–ø—Ä–∏–º–µ—Ä, –º–∞—Å—Å–∏–≤—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞–∫–∂–µ —è–≤–ª—è—é—Ç—Å—è –æ–±—ä–µ–∫—Ç–∞–º–∏.

// --- --- --- --- --- --- --- --- --- --- --- ---

let name = String;
let age = Number;
let isBoolean = Boolean;

//  –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç —á–µ—Ä–µ–∑ 5 –ª–µ—Ç.

let currentAge = 18;
let futureAge = currentAge + 5;
console.log(futureAge);

// --- --- --- --- --- --- --- --- --- --- --- ---

// –°—Ä–∞–≤–Ω–∏—Ç–µ —Å–≤–æ–π —Ç–µ–∫—É—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç —Å 18 —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è 
let myAge = 18;
let isEqualTo18 = myAge === 18;
console.log(isEqualTo18);

// --- --- --- --- --- --- --- --- --- --- --- ---

// –°–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç person —Å —Ç—Ä–µ–º—è —Å–≤–æ–π—Å—Ç–≤–∞–º–∏:
let person = {
    name: "Azamat",
    age: 18,
};

let isAdult = person.age === 18;
console.log(isAdult);

// --- --- --- --- --- --- --- --- --- --- --- ---

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ (–ø–æ –∂–µ–ª–∞–Ω–∏—é):

let remainder = 18 % 2;
console.log(remainder);

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º

let word = "MADAM";

let lowerCaseWord = word.toLowerCase();
let reversedWord = lowerCaseWord.split('').reverse().join("");
if (lowerCaseWord === reversedWord) {
    console.log("–ü–∞–ª–∏–Ω–¥—Ä–æ–º");
} else {
    console.log("–ù–µ –ø–∞–ª–∏–Ω–¥—Ä–æ–º");
}

// –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–∞–ª–∏–Ω–¥—Ä–æ–º–∞ –≤ —Ñ—É–Ω–∫—Ü–∏—é

function checkPalindrome(word) {
    let lowerCaseWord = word.toLowerCase();
    let reversedWord = lowerCaseWord.split('').reverse().join('');

    if (lowerCaseWord === reversedWord) {
        console.log("–≠—Ç–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º");
    } else {
        console.log('–ù–µ –ø–∞–ª–∏–Ω–¥—Ä–æ–º');
    }
};

// --- --- --- --- --- --- --- --- --- --- --- ---

// Math.floor() - –æ–∫—Ä—É–≥–ª—è–µ—Ç —á–∏—Å–ª–æ –≤ –º–µ–Ω—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É
// Math.round() - –æ–∫—Ä—É–≥–ª—è–µ—Ç —á–∏—Å–ª–æ –≤ –±–æ–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É
// Math.random() - –±–µ—Ä–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞

let numberExample = 1.5;
let randomValue = Math.random(); // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞ –æ—Ç 0 –¥–æ 1
console.log(randomValue);

// --- --- --- --- --- --- --- --- --- --- --- ---

let textExample = "Robin Singh from USA.";
let transformedText = textExample.replace(/ /g, "-").toLowerCase();
console.log(transformedText);

// –ß—Ç–æ –¥–µ–ª–∞–µ—Ç return –≤ —Ñ—É–Ω–∫—Ü–∏–∏?
// üîπ return –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏. –ë–µ–∑ –Ω–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç undefined).

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ß–µ–º –æ—Ç–ª–∏—á–∞—é—Ç—Å—è let, const –∏ var?
// üîπ –í JavaScript –µ—Å—Ç—å —Ç—Ä–∏ —Å–ø–æ—Å–æ–±–∞ –æ–±—ä—è–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:

// var (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–¥–∫–æ).
// let (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –¥–ª—è –∏–∑–º–µ–Ω—è–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π).
// const (–¥–ª—è –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π).

// --- --- --- --- --- --- --- --- --- --- --- ---

// EXAMPLE CALLBACK FUNCTION ->

// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç callback
function greet(name, callback) {
    console.log("–ü—Ä–∏–≤–µ—Ç, " + name);
    callback(); // –í—ã–∑–æ–≤ callback –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
}

// Callback —Ñ—É–Ω–∫—Ü–∏—è
function sayGoodbye() {
    console.log("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!");
}

// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å callback
greet("–ò–≤–∞–Ω", sayGoodbye);

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ë–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π –ø—Ä–∏–º–µ—Ä callback

function printMyName() {
    console.log("Bogdan");
}

console.log("Start");

setTimeout(printMyName, 3000); // –ó–∞–¥–µ—Ä–∂–∫–∞ 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º —Ñ—É–Ω–∫—Ü–∏–∏ printMyName

// --- --- --- --- --- --- --- --- --- --- --- ---

// –†–∞–±–æ—Ç–∞—è —Å –æ–±—ä–µ–∫—Ç–∞–º–∏, –Ω–µ —Å—Ç–æ–∏—Ç –∏–∑–º–µ–Ω—è—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –Ω–∞–ø—Ä—è–º—É—é,
// –ª—É—á—à–µ —Å–æ–∑–¥–∞—Ç—å –∫–æ–ø–∏—é –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–µ–π

const originalObject = { name: "Alice" };
const copiedObject = { ...originalObject }; // —Å–æ–∑–¥–∞–µ–º –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—É—é –∫–æ–ø–∏—é
copiedObject.name = "Bob";
console.log(originalObject.name); // –≤—ã–≤–µ–¥–µ—Ç "Alice" ‚Äî originalObject –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è

// --- --- --- --- --- --- --- --- --- --- --- ---

// –û–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏

// 1. –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤–∏–¥–∏–º–æ—Å—Ç–∏
// 2. –õ–æ–∫–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤–∏–¥–∏–º–æ—Å—Ç–∏

const globalVariable = 5;

function outerFunction() {
    function innerFunction() {
        console.log(globalVariable); // 5
    }
    innerFunction();
}

outerFunction();

// --- --- --- --- --- --- --- --- --- --- --- ---

// –û–ø–µ—Ä–∞—Ç–æ—Ä—ã && –∏ ||
// –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –æ—á–µ–Ω—å —á–∞—Å—Ç–æ, –∏ —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–æ—Ä–∏—è !

// –ü—Ä–∏–º–µ—Ä—ã:

// const userName = userInput || "–ì–æ—Å—Ç—å";
// console.log(userName); // –µ—Å–ª–∏ userInput –ø—É—Å—Ç–æ–π, –±—É–¥–µ—Ç "–ì–æ—Å—Ç—å"

// –°–ª–µ–¥—É—é—â–∏–π –ø—Ä–∏–º–µ—Ä:

const result = null || 0 || false || "–î–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã";
console.log(result); // "–î–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã"

// --- --- --- --- --- --- --- --- --- --- --- ---

// –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Äî —ç—Ç–æ –∫–æ—Ä–æ—Ç–∫–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π, –≤–≤–µ–¥–µ–Ω–Ω—ã–π –≤ ES6.
// –û–Ω–∞ –ø–∏—à–µ—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–∏–º–≤–æ–ª–∞ =>, –∏–∑-–∑–∞ —á–µ–≥–æ –∏ –ø–æ–ª—É—á–∏–ª–∞ —Å–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.

// –ö–æ—Ä–æ—Ç–∫–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å:
// –£ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –∑–∞–ø–∏—Å—å, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –∫–æ–¥ –ø—Ä–æ—Å—Ç–æ–π

// –ù–µ –∏–º–µ–µ—Ç –∏–º–µ–Ω–∏
// –ù–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞–º–∏
// –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ arguments

// –î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –∫–æ–¥–∞:
// –û—Å–æ–±–µ–Ω–Ω–æ —É–¥–æ–±–Ω–æ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é:

// –ö–æ–≥–¥–∞ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç?
// –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç arguments.
// –ö–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ new).
// –ï—Å–ª–∏ –≤–∞–∂–µ–Ω —è–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç this (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –º–µ—Ç–æ–¥–∞—Ö –æ–±—ä–µ–∫—Ç–æ–≤).

const sum = (a, b) => {
    let c;
    a = a + 1;
    c = a + b;
    return c;
}

function exampleFunction() {
    const sum = (a, b) => a + b;
    console.log(sum(2, 3)); // 5
}

// --- --- --- --- --- --- --- --- --- --- --- ---

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:

// –ú–æ–∂–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É –≤—Ä—É—á–Ω—É—é:
// throw new Error('Some error')

// –ß—Ç–æ –±—ã –ø–æ–π–º–∞—Ç—å –≤–µ—Ä–æ—è—Ç–Ω—É—é –æ—à–∏–±–∫—É –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å try {}, –µ—Å–ª–∏ –≤ –∏—Ç–æ–≥–µ –æ—à–∏–±–∫–∞ –≤—Å—ë —Ç–∞–∫–∏ –≤—ã–π–¥–µ—Ç –æ–Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ catch() {}

// try {
// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±–ª–æ–∫–∞ –∫–æ–¥–∞
// } catch (error) {
//     console.log(error)
//     console.log(error.message)
// }

// console.log("Continue...")

// –†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä

const fnWithError = () => {
    throw new Error("Some error");
}

try {
    fnWithError();
} catch (error) {
    console.log(error);
}

console.log("Continue...");

// --- --- --- --- --- --- --- --- --- --- --- ---

// –ú–ê–°–°–ò–í:

// –ú–ê–°–°–ò–í - —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ —Å–≤–æ–π—Å—Ç–≤
// —Å–≤–æ–π—Å—Ç–≤–æ —É –º–∞—Å—Å–∏–≤–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è - 0, 1, 2, 3 etc..

// –ú–∞—Å—Å–∏–≤ —ç—Ç–æ –æ—á–µ–Ω—å –ø–æ–ø—É–ª—è—Ä–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤ JS
// –∏ –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–∞–∫–æ–π –∂–µ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å—é –∫–∞–∫ –∏ –û–±—ä–µ–∫—Ç

// –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç —Å–≤–æ–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä - index, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0

// –§–æ—Ä–º–∞—Ç –∑–∞–ø–∏—Å–∏ –º–∞—Å—Å–∏–≤–∞:

const myArray = [1, 2, 3]
console.log(myArray)
// [1, 2, 3]

const myArray2 = new Array(1, 2, 3)
// –ø—Ä–∏–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é Array –∏ –ø–µ—Ä–µ–¥–∞—ë–º –≤ –Ω–µ—ë –∞—Ä–≥—É–º–µ–Ω—Ç—ã
console.log(myArray2)
// [1, 2, 3]

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–∞—Å—Å–∏–≤–æ–≤

// [1, 2, 3]
// 0: 1
// 1: 2
// 2: 3
// length: 3

// –ß—Ç–æ-–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç —Å –º–∞—Å—Å–∏–≤–∞ –Ω—É–∂–Ω–æ:

console.log(myArray[0])

// –ß—Ç–æ-–±—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ –Ω—É–∂–Ω–æ:

myArray.unshift(0);  // –¥–æ–±–∞–≤–ª—è–µ–º 0 –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞
myArray.shift();  // —É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç (1)

myArray.push(4);  // –¥–æ–±–∞–≤–ª—è–µ–º 4 –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞
myArray.pop();  // —É–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç (3)

myArray.splice(1, 0, 1.5);  // –¥–æ–±–∞–≤–ª—è–µ–º 1.5 –Ω–∞ –∏–Ω–¥–µ–∫—Å 1 (–≤—Å—Ç–∞–≤–∫–∞ –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤)

// arr.splice(startIndex, deleteCount, item1, item2, ...)

// startIndex ‚Äî –∏–Ω–¥–µ–∫—Å, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã).
// deleteCount ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å (–º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å 0, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã).
// item1, item2, ... ‚Äî —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –º–∞—Å—Å–∏–≤, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ–∑–∏—Ü–∏–∏ startIndex

let ar = [1, 2, 3, 4, 5]
ar.splice(2, 1,)
// —É–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å–æ–º —Ç–æ–ª—å–∫–æ 1 –∑–Ω–∞—á–µ–Ω–∏–µ
console.log(ar)

let newArr = [...myArray, 4];  // —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º 4
// console.log(newArr[0])
// console.log(newArr[0,1])
console.log(newArr)

// --- --- --- --- --- --- --- --- --- --- --- ---

