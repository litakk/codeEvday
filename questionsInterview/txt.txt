Функция — это блок кода, который можно многократно вызывать по имени, передавать аргументы и получать результат.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Лексическое окружение — это внутренняя структура, которая хранит переменные, функции и ссылки на внешние области видимости.
Каждая функция запоминает окружение, в котором была объявлена.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Замыкание — это функция, которая запоминает переменные из внешней области видимости даже после завершения внешней функции, благодаря лексическому окружению.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Коллбэк — это функция, которую я передаю как аргумент, чтобы другая функция вызвала её позже

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Промис — это объект в JavaScript, который представляет собой обещание выполнить некоторую задачу в будущем.
У него есть 3 состояния - resolve(успешно), reject(отказано), pending(ожидание)

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

