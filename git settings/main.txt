1. Настройка Git делаем один раз

git config --global user.name "Твое Имя"
git config --global user.email "your.email@example.com"

- - - - - - - - - - - - - - - - - - - - - -

2. Создаем новый репозиторий: (инициализация Git)
Создадим новый проект с отслеживанием изменений: 

git init 

Git создаст скрытую папку .git, где будет храниться вся история изменений

- - - - - - - - - - - - - - - - - - - - - -

3. Добавление файлов в Git
Создаём новый файл:

echo "Привет, Git" > file.txt

git add file.txt

- - - - - - - - - - - - - - - - - - - - - -

4. Фиксация изменений (коммит)

git commit -m "Добавил файл file.txt"

Теперь у нас есть сохранённая версия проекта!

- - - - - - - - - - - - - - - - - - - - - -

5. Просмотр истории коммитов

git log

Покажет список всех сохранённых версий (коммитов)

- - - - - - - - - - - - - - - - - - - - - -

6. Подключение к GitHub и отправка кода
Если у тебя есть репозиторий на GitHub, подключаем его:

git remote add origin https://guthub.com/твой-логин/твой-репозиторий.git

Отправляем код:

git push -u origin main

- - - - - - - - - - - - - - - - - - - - - -

7. Получение изменений с удалённого репозитория

git pull origin main

Если кто-то внёс изменения в код, это команда скачает их

- - - - - - - - - - - - - - - - - - - - - -

8. Создание новой ветки
git branch feature-branch
git checkout feature-branch

Теперь ты работаешь в отдельной ветке, не трогая основной код.

- - - - - - - - - - - - - - - - - - - - - -

9. Слияние веток
Когда изменения готовы, их можно слить в main:

git checkout main
git merge feature-branch

- - - - - - - - - - - - - - - - - - - - - -

10. Отмена изменений
Если ты передумал и хочешь вернуть всё назад:

git reset --hard HEAD-1

Эта команда удалит последний коммит

- - - - - - - - - - - - - - - - - - - - - -
