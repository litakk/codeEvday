// 1Ô∏è‚É£ –ß—Ç–æ —Ç–∞–∫–æ–µ React?
// üëâ React ‚Äî —ç—Ç–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ JavaScript –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ (UI).

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 2Ô∏è‚É£ –ß—Ç–æ —Ç–∞–∫–æ–µ JSX?
// üëâ JSX (JavaScript XML) ‚Äî —ç—Ç–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–∏—Å–∞—Ç—å HTML –≤–Ω—É—Ç—Ä–∏ JavaScript.

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

const element = <h1>Hello, React!</h1>;
// 3Ô∏è‚É£ –ß—Ç–æ —Ç–∞–∫–æ–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ React?
// üëâ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã ‚Äî —ç—Ç–æ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —á–∞—Å—Ç–∏ UI, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∏–ª–∏ –∫–ª–∞—Å—Å–æ–≤—ã–º–∏.

function Welcome() {
  return <h1>–ü—Ä–∏–≤–µ—Ç!</h1>;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 4Ô∏è‚É£ –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∏ –∫–ª–∞—Å—Å–æ–≤—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏?
// üëâ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ ‚Äî –ø—Ä–æ—Å—Ç—ã–µ, –∏—Å–ø–æ–ª—å–∑—É—é—Ç useState, useEffect.
// üëâ –ö–ª–∞—Å—Å–æ–≤—ã–µ ‚Äî —Å–ª–æ–∂–Ω–µ–µ, –∏—Å–ø–æ–ª—å–∑—É—é—Ç this.state, this.setState().

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 5Ô∏è‚É£ –ß—Ç–æ —Ç–∞–∫–æ–µ state?
// üëâ state ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç –¥–∞–Ω–Ω—ã–µ –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è.

import { useState } from "react";
function Counter() {
  const [count, setCount] = useState(0);
  return <button onClick={() => setCount(count + 1)}>–°—á–µ—Ç: {count}</button>;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 6Ô∏è‚É£ –ß—Ç–æ —Ç–∞–∫–æ–µ props?
// üëâ props (—Å–≤–æ–π—Å—Ç–≤–∞) –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–∑–≤–Ω–µ –∏ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.

function Welcome({ name }) {
  return <h1>–ü—Ä–∏–≤–µ—Ç, {name}!</h1>;
}
<Welcome name="–ò–≤–∞–Ω" />;

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 7Ô∏è‚É£ –ß—Ç–æ —Ç–∞–∫–æ–µ useState –∏ –∫–∞–∫ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç?
// üëâ useState ‚Äî —ç—Ç–æ —Ö—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.
// üëâ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤: —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.

const [count, setCount] = useState(0);
setCount(count + 1);

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 8Ô∏è‚É£ –ß—Ç–æ —Ç–∞–∫–æ–µ useEffect –∏ –¥–ª—è —á–µ–≥–æ –æ–Ω –Ω—É–∂–µ–Ω?
// üëâ useEffect –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–¥ –ø—Ä–∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–µ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.

useEffect(() => {
  console.log("–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–±–Ω–æ–≤–∏–ª—Å—è!");
}, [count]); // –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ count

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 9Ô∏è‚É£ –ö–∞–∫–æ–π –ø–æ—Ä—è–¥–æ–∫ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤?
// üëâ 1. –†–µ–Ω–¥–µ—Ä (React —Å—Ç—Ä–æ–∏—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π DOM).
// üëâ 2. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ (Reconciliation) (React –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å).
// üëâ 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ DOM (React –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —á–∞—Å—Ç–∏).

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// üîü –ß—Ç–æ —Ç–∞–∫–æ–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π DOM?
// üëâ –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π DOM ‚Äî —ç—Ç–æ –∫–æ–ø–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ DOM, –∫–æ—Ç–æ—Ä—É—é React –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 1Ô∏è‚É£1Ô∏è‚É£ –ß—Ç–æ —Ç–∞–∫–æ–µ key –≤ —Å–ø–∏—Å–∫–∞—Ö?
// üëâ key ‚Äî —ç—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –ø–æ–º–æ–≥–∞—é—â–∏–π React –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞.

const list = items.map(item => <li key={item.id}>{item.text}</li>);

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 1Ô∏è‚É£2Ô∏è‚É£ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–¥–Ω—è—Ç–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è (lifting state up)?
// üëâ –ö–æ–≥–¥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω—É–∂–Ω–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏, –µ–≥–æ –ø–æ–¥–Ω–∏–º–∞—é—Ç –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç.

function Parent() {
  const [value, setValue] = useState("");
  return <Child value={value} setValue={setValue} />;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 1Ô∏è‚É£3Ô∏è‚É£ –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–±—ã—Ç–∏–π –≤ React?
// üëâ –ò—Å–ø–æ–ª—å–∑—É–µ–º onClick, onChange, onSubmit –∏ —Ç. –¥.

<button onClick={() => alert("–ù–∞–∂–∞—Ç–æ!")}>–ù–∞–∂–º–∏</button>

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 1Ô∏è‚É£4Ô∏è‚É£ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç?
// üëâ –£ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ value –±–µ—Ä—ë—Ç—Å—è –∏–∑ state, –∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ onChange.

function Input() {
  const [text, setText] = useState("");
  return <input value={text} onChange={(e) => setText(e.target.value)} />;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 1Ô∏è‚É£5Ô∏è‚É£ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ñ–æ—Ä–º–∞–º–∏ –≤ React?
// üëâ –ò—Å–ø–æ–ª—å–∑—É–µ–º useState –∏ onSubmit.

function Form() {
  const [name, setName] = useState("");
  const handleSubmit = (e) => {
    e.preventDefault();
    console.log(name);
  };
  return (
    <form onSubmit={handleSubmit}>
      <input value={name} onChange={(e) => setName(e.target.value)} />
      <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
    </form>
  );
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 1Ô∏è‚É£6Ô∏è‚É£ –ß—Ç–æ —Ç–∞–∫–æ–µ React.Fragment (<> </>)?
// üëâ –≠—Ç–æ –Ω–µ–≤–∏–¥–∏–º—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç –ª–∏—à–Ω–∏–π div –≤ DOM.

<>
  <h1>–ó–∞–≥–æ–ª–æ–≤–æ–∫</h1>
  <p>–¢–µ–∫—Å—Ç</p>
</>

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 1Ô∏è‚É£7Ô∏è‚É£ –ß—Ç–æ —Ç–∞–∫–æ–µ HOC (Higher Order Component)?
// üëâ HOC ‚Äî —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø—Ä–æ–ø—Å–∞–º–∏.

const withLogging = (Component) => (props) => {
  console.log("–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω!");
  return <Component {...props} />;
};

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 1Ô∏è‚É£8Ô∏è‚É£ –ß—Ç–æ —Ç–∞–∫–æ–µ React.memo()?
// üëâ React.memo() –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥, –∑–∞–ø–æ–º–∏–Ω–∞—è (–º–µ–º–æ–∏–∑–∏—Ä—É—è) —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

const MemoizedComponent = React.memo(MyComponent);

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 1Ô∏è‚É£9Ô∏è‚É£ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç (Context API)?
// üëâ Context –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –ø—Ä–æ–ø—Å–æ–≤.


const ThemeContext = React.createContext("light");
function App() {
  return (
    <ThemeContext.Provider value="dark">
      <Child />
    </ThemeContext.Provider>
  );
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// 2Ô∏è‚É£0Ô∏è‚É£ –ß—Ç–æ —Ç–∞–∫–æ–µ useRef –∏ –¥–ª—è —á–µ–≥–æ –æ–Ω –Ω—É–∂–µ–Ω?
// üëâ useRef —Å–æ–∑–¥–∞—ë—Ç —Å—Å—ã–ª–∫—É –Ω–∞ DOM-—ç–ª–µ–º–µ–Ω—Ç –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –º–µ–∂–¥—É —Ä–µ–Ω–¥–µ—Ä–∞–º–∏.

const inputRef = useRef();
<input ref={inputRef} />;

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
